var fs = require('fs')
    , models = require('../../../models')
    , mongoose = require('mongoose')
    , util = require('../util')
    , inbox = require('./apiinbox/index')
    , check = require('validator').check
    , config = require('../../../config')
    , sendPushObj = require('../../../routes/core/sendPush')
    , deviceUsers = models.DeviceUsers;

exports.router = function (app) {

    console.log("Mobile Profile Service Router");
    //app.get('/api/test',function(req,res){res.send({token:"Test Token"})})
    app.post('/api/profile', profileAPI) // , util.authorized
        .post('/api/profile/edit', doEditProfileAPI) //, util.authorized
        .post('/api/profile/uploadAvatar', uploadAvatar)
        .post('/api/user', viewUserAPI)
        .all('/api/user/:id/*', util.authorized)
        .post('/api/saveuser/:id/save', saveUserAPI)
        .post('/api/user/:id/remove', removeProfileAPI)
        .get('/api/user/:id', getUserInfo)
        .post('/api/profile/logingsettings/:id', loginsettings)
        .post('/api/profile/deleteAvatar/', deleteAvatar)
        .post('/api/profile/checkProfileSaved', CheckProfileSaved);
}

function removeProfileAPI(req, res) {
    console.log("Remove User Profle API".red);
    var id = req.body._id;
    var save_user = req.params.id;

    // Save profile
    models.User.findById(id, function (err, user) {
        if (err) throw err;

        if (user) {
            //if (user.notification.email.businessCards) {
            //	inbox.emailNotification(user, "inbox")
            //}
            //user.mailboxUnread++;

            // find the card
            user.savedProfiles.pull(save_user)
            user.save();
            return;
        }
    });
}

function uploadAvatar(req, res) {

    if (!req.body._id) {
        res.format({
            json: function () {
                res.json({
                    status: 404,
                    message: "User Id missing"
                })
            }
        });
        return;
    }

    /*models.User.findOne({_id:req.body._id} , function(err, u) {

     //console.log(req);

     var _id = req.body._id;
     var dataString = req.body.avatar;

     //dataString.replace(" ", "+");

     console.log("-----------");
     console.log(dataString);
     console.log("-----------");



     /*var matches = dataString.match(/^data:([A-Za-z-+\/]+);base64,(.+)$/),
     response = {};

     if (matches.length !== 3) {
     return new Error('Invalid input string');
     }

     response.type = matches[1];
     response.data = new Buffer(matches[2], 'base64');


     var newName = config.path+'/public/profileavatars/'+_id+'.png';
     var buffer = new Buffer(dataString, 'base64');
     // write buffer to file
     //buffer = new Buffer(bitmap);
     fd = fs.openSync(newName, 'w');
     fs.writeSync(fd, buffer, 0, buffer.length, 0);
     fs.closeSync(fd);

     res.format({
     json: function() {
     res.json({
     status: "OK"
     })
     }
     });
     });*/


    models.User.findOne({_id: req.body._id}, function (err, u) {

        if (req.files && req.files.avatar != null && req.files.avatar.name.length != 0) {
            var ext = req.files.avatar.type.split('/');
            var ext = ext[ext.length - 1];
            u.avatar = "/profileavatars/" + u._id + "." + ext;

            var createThumbnails = function () {
                u.createThumbnails(function () {
                    u.save();
                });
            }


            console.log(req.files.avatar.path);
            console.log(config.path);
            console.log(u.avatar);

            fs.rename(req.files.avatar.path, config.path + "/public" + u.avatar, function (err) {
                if (err) throw err;

                if (config.knox) {
                    config.knox.putFile(config.path + "/public" + u.avatar, "/public" + u.avatar, function (err, res) {
                        if (err) throw err;


                    })
                }

                createThumbnails();

                console.log("Profile File Uploaded");

                res.format({
                    json: function () {
                        res.json({
                            status: 200,
                            url: util.editURL(u.avatar),
                            message: "File Uploaded Successfully."
                        })
                    }
                });


            });
        } else {
            res.format({
                json: function () {
                    res.json({
                        status: 404,
                        message: "No File Received!"
                    })
                }
            });
        }
    });


    /*

     //var dataString = "";
     var dataString = "iVBORw0KGgoAAAANSUhEUgAAAIwAAABoCAIAAACsd4/9AAAAAXNSR0IArs4c6QAAAAlwSFlzAAAWJQAAFiUBSVIk8AAAABxpRE9UAAAAAgAAAAAAAAA0AAAAKAAAADQAAAA0AABKfXKpHssAAEAASURBVHgBfLwHVFVn1v/vWm i0m7vvffGpffee 8dURCUKkiT3pv0KiAqIE1EVDr23mI3vZk2mZZMMslMZv77gHHmfX9r/V17nRyOF8M9n/vd 7v38xx2BPgcCPLLDAnIDg3MCdmKsKDcsKBDESEFEJFhhyPDiqLDi2MiymIjj8RElcVFVyTH1aYkNezf03ogtT0ztTNzf3dORm/ewYGC7GPFeaPlhaeqS0/Xl881VS0crb/Y07Y22HVpuPfqaP/1scGbJ4ZunTx2 9TQ7cnRO6fH7k2ffDB76sGZiUfzk 8tzjy7eOb50vyLlYWXKwuv4Lh6Dom1xVfrFyBeQmxcfLW59P6l5Q 34gM4h4CLEGvnX60svlxdfLl /n2I7VduvwCO8L0rCy W5p fP/Nsce7pudknb2Lm8cLM47NTT85Mvjc7/nDqxP2J0Xunhu/Az3l84Ab8zBDHeq4MdF7pa9/sbllrb1purV9qqjnfUHWutny qnS2vHSmtOh0yeGJ4kMTwb6JWg1LIiKLeGQBB44kqZhOp MwaD00SheD1kUb6KDROhgDfQxaH483IJHhqIvD6eFQeig9fQMDnV27d 56F4l3t2L37nd37dq5w8cr3d/3YIh/FnBCIghBFRqchxAKRQhFhZfERJQiEVUWH12eEFOZFFu7N7Fhf0rrwbSOrPTu3Iy Q5mD VlDhbkjJfljFUXjtUemG6vm2 rOdzYv9x5dG jchPcJ7xbe9jak8WN3JkduT524N/M7ofnJxwvTTxdnn16cf7G8AJxeABu40ZeWP3gbl1c hLiy tHb2Lry0fYL3vK4tEXu7XfByTak1cUXy/MvLvxvTkAIienH8APMTTyCnwd Kvj0jI/chg/TNir4hA11Xe3vuNR3FOHUAZzqLjZWLdYApCNvIB05PJUUV6CSc4GQmE/hswhcOlEmpPMFZDodi8UbYIEEQQ N0UWj9HFoNJGAIZEMyGQDEl4fj9HDI9d3YzE6aJQeFqVPxuuj9HV27dqtA8x2vbvD13P/tpiCtjkBocA3SgJIUWFFgAc0BBGHQKpMjKkGJQGktD1NGfuOZqZ1ZqcjMtpWUkne8bLD49Ul0w0VAOlCV/NKX/s6oqSeq2P9N0BJ8M7Hj92aGL59 vhduB2IjCYRGc2ffrw48 T83NMLZ55dmH9xcf756rkXcHOBx9U1JK6tf7wd1zfenGxd//jq2se/MwN WwhXQGdv0MK/sLH0/toFRI6gs WF5xfPIpz t5ieIJBOPwYxbesJ9D15/O74yJ1tSW2J6dpg55X 9kvdrYiYWuouNFYv1lWcrSqbKy ZPVI0k5XebmGiFYuoEhFVwCGxaUQRlyqT0egMHAYLGtmNMtitq7sTB0iw liMPpmIptEwBII Ea PBYWhdkMAGAOUHpuB10qpeIyOvu5ufb3d rq7dvh7Z0C6C/bPCg7ICg3M3sp1eeHBSK6LCANIkOgQJQGkhOjyxJjKxLialPi6fUmNqcnN6XvbIONlIekOEROipEMnAFJl0em6srmm6nPtDUs9bavbSjr VklIxrsFt2Bi9A7cCyTjjT Eu3Nu5inkIriDF86CmCC5vQKhAIPrG59A3Nj8FAJOABVc/D/k3iKEE2AG37i5/MHG0qv1iy/XkHgFnFbPv1o 92Jp4eU2J/h/QZybfQYKhnQHAZx F9N9EBP8bPATAif4bI30XQMx9bVf6kIgrWxnvLrKheqy YrSswU5oy62rjIBXS5miAUUAYciEZKlIgqDhoUsB0kMhQaJ6BARJAYYfR0CWp9OwRLwepAAgdmune  8847O3e u3PnTsBJJYKYdHV0d4KWID0ikAIh1wVsszkUHgyRD8eIkMMRYUXbuS46ojQalBRVlhBdmRCLyCgloX5fUlPanpb0fW0H9r9R0uGc4SMFJyqLT4OMqkunAVJj5dnW2vNdLSv9HRuQ7iDXwbvdDkgj8OYh 8O9QDLe5HsL008uzD1fOvscyXXnXm5cQBLddnKD 75N6HdIn1xe  jylmj n79CRHZl/WPkBSsfbqx8sL78/sby  tLrwDVFqRXSwvPlxZevOWESGrmDae3MoLKBLHN6U196r9xrPtaf8flnraNzpbVtoaLzbUXkLJUtlB5ZD4uPF2rFEvEHKWcIRfRhHyKVMrg80kEyFooKDlQjfTIZDSNAv/VxaH1KAQMyAgDxQmto6ez85133tXX0THQ262rtwtho7dLT3cnqEpPd/fuXe 8  67O0A6EcEFUWEF0eGFUWGFWykOOdkyC4iAtrIcUooSYmuA0J74Osh1iIxSjqantWemvZFRUe5oReEksGmuPgdsjtZdgHTX3nARkjikcsh42zUJIL0pSyN3J48j9wJkBB9hKOOQ4pbPQnlHKv922d/m9FZGb8UEGJAUt5UA/5vfG52tI3 1jerS6oebgAokhajqFXBCkt45QPUfPS3OPt8W03bGg59n5tTDrYx3b9tEwM MZLzuawMA6SgC6WjjSguUperF qrzWWmNDhamWrVQKuFIhXSJiCYV00RSGp2Fx B08QQED4OOgyASQUa6aH1dCglqkj4Go4PB6Bro6 jr6eDRKChF8CWOoKujg9QhqEYQoLD/ Z//2QE8YsKK4pCE9h8kWwYBwFQkxlZtg9lSD6S4pv0goL2t264hO70n90D/dqIrO3yqrmy2rX6xt3V1oH1jqPPSsc7LQ12XjnVfHgbX0HftxODNU8O3oBRNjyFs4C5AwO2Ym0AqwdnpJ5B84AMOH3O4j4idW9oycttOAclvH1/ZSn1vUV3b OTqxscQCMVLn0Jc2/xk  IVhNObAFUBJwiQ1NrF93/n9GL5HNBCUEG8yXszT7czHnD6b0i/24frWx4PytI6lKW2BqhMy5XFp3xdvUwNFXKFUCRiCXlITZIrGEwOGYszgJtOIuozGDgWE0elYLA4fT3ggdWnEg0oVAyFhiFTDFhMNI2OImD1MCgQ0y49nXdRKB09ONHbBV5Pb9dO3Z3v7EiCSgOeDfHWQKU8KbZqTzxUHbAGiGL2JzWl72k5sLctM7U9e39nTnrXoYN9 ZkDcF6QPVSUO1KUN1pacKKqZKq5er6r6eJA /pw95WRnqujvdeO9984OXhrfPjWxMjt06N3Zk7cnxt/cPb0ewtT4KaenJt sjjz9D8x wwsA4hpCQrSOYQTWGqoKHBnIeAWIxls/aP/RnJ9c4vK5ifXL33634Gg2kT4bR9BUtt6epP3LiCcINYuIMfV8 9vCeuN64O6uG3HoTgBp9Nj98dH7oLZATEhZakbsQ/blamjeb2pZiEhIt3e3MzIUKlQCiVStkBAlUnoQjGVwSIABhoVw cQuGwclYYhUQwIRD2EEBnFoKHpNAxYBhLRgElBkQh6BJwOWg8ggTvfjULrosA1GOzW0wVmOyH17Sg40JOd2nFgb0tqUn1KQu2  Pr9yc1ZaR2HDvYWZQ0UZw8W5wyV5I6U5Y VF5yqOHyqovBUZdFEDdIJzTZWzjVVnmmrPdfTsjLYsTHcdXm09yq8GQgkuSEVCKk902P34D0Dm/OzT6ENWj336tLSB1A8rm98em39k8sriIfeXPpg48L76xch0UFAgoIGCHFogOcSxOqH2wGotu/ lmgQGW0j2T4CqhuXP9uObWxwfRvSNiHkCP/4m0DO17aYwWcC4o2kZv5jIkBSIPptTvCZQzJe55Xejs2 jstdLaupSYdc7O1tzEyVMqmAzWEzKFw2RaVgCgREHp/E4RMZLCyHjWcyMBQKikZFM kYHEYfyLGZWArBgELQJ5MM8DhdA53dGAMdA93dKN1daP1dulCN9HcTcfpQn3br7IRWaUd9yam6kpO1RScr80eLswcOH gryOyryD9 tHqup2Gxq36hpWo6NSE7Jih6f3J dkZVTcnJtpqzXY3n 1tXhrs2j/dcPtF/dXzwxsTwrZNApf8mvJnfNXR7cgQI3T8z8fD87JOVhedr519eXv7g5qVP79/84uHt1/dvfnn32he3Lv/Htl2D9LX2MZgChM22n17/6BrkuvWPECWtIcXm/4D5/4EEr4SkB/8OsPmveAXnm1v2D3GAy8gHAj4cIN8L88 gUTs3 xRKFMR26oM ASoTiOn4wM1jPdcHuq70dVxqbzp3cH9RgI vs4ODmcZYwhMKeTwum6FScCDXQW8EhJhcPJdLYDGxwIZM1KOQDBhUDBGyHxNLJ6NJOAMCzgCPBSOnY6CjAxZBZ9dOiN3Qw77zDg6tQ8LqQW7U04FWadeO9prZ7toz3fXz3Q1nexoWeurP9TYsDrctn haH vZGO3c7Kg9Hejm7GNt7G5pZGemdra3K8puGuu9PDN699zEgwsz7y3PPV49 3Rz8cXm RcXZ59On7g3fuz2FKhn/OHC5OPF6SfLZ59Dv7JtmoEQgHkT1z 7d Pzu9c v3nps23ntl35rwAMsNHbSKBDQnLX23gjnbdC2Yb0v8lBGvx0ixBi896qcLssbeOHi3CydeVDENPK4iuQ0ZbTe3Ju5gmcAKS3Zu/0GHjxu5AVhntvDnVfb2 Yz9ibGxoQ4u3u6WBvZ6Y1USmkYilfIeWqFWyhgMRggHlD0ZloNgsIoak0FCiJSjagkgyoNDTkOgJGD/HWyHhh5 6d7wKhrZ4VTPi7QGjnO/8DJ7t27tTVQQL agfg6a0/29t4rq95caDlwrG2peGOldGuNYjj3etj3ZdLc2uc7NVmWoGdVmGnVZtKRQ5aTe6 wwPtZ6ZGbyxOPb44 3ht4dnN9Q8fXv/80Y0vrq68f27qPehSZxFT8OgskuWeLZ99AYMZyGCQ5QAJxK3Ln92 8vmdq0j8h9BWGwR6QiT1 xEI/R 5/J8KtE1oO9fBEQj9d4D4tuPSKuIgtpltCQi8CdQnJNGBjLZz3Zsmd/pNzwTpbnb80XbzBI3diaG7Xc0LGXtzokKiA3xC3B3drS1stEpDmUQqlfBUUhabTsCh9TFgu0EKRH0qSZ9CMaAzMSQyCvBQt1CR8QZQZsBbQ zaCUeExy6YBL37Lhg5 IP0TO 8owdNkj5AfAeA7eiqnQNOPY0LEH3N5wdaLw4dXT7WvjLSuXq8e NU35XDmVVqlYAvpJgZCawtJPbmKjuN3EgkdHGwSU1KH 5aBtFAQluef3pj/aP3br5 euer 9e 2Dj/CqwBDOV L0UwQXgO9WYL0qdA6A2kK5/fvoqcvxETFBVoWkFYEHBxK25c/t0XXP7sOnL985tXvrh5BY6f/15 Prt5BYnbkDyvfgHHrZPPb12F18C3vPn27eIEnLbYbNtxpL2FgOZpe1y0ZfNATM/eOJqt7AefM6AFbdPowLX8jMq44MTwoGg/j0AnazcrC1sjralKKVOI2DQCDmtgoLtLBzpRjK4OeGsY9tCpaDoVBeMfGhXFpKFoJBQMgQz0keS2exc4bSAEh53vIO0s4rZ/h/QujCd0dyPg4K92tFXPdNTOddXNd9VDulvsa7o42Lp87OjKsaOrx46ujXSsA7l9SaUsBt3GQmJnLbUzl1sai40UQoWECw12Yti yeG7kNkuzD29fPHV3cufPbv/9ccvvv/4 fdP7n59/9rnt GegkXe BQS3a1Ln9259sX9GxCvH9z46uGtr967 /Xje1/D8RFSol7D9Xs3vrx/4yvk/OaXcH73 hd3riM3/c71L 9BwPVbrx/c/urBra/v3/4K4h4Utptf/H799f3br /den0XvvHGl/CNW/HlNjxQ5BtCi0ifBF5/u1sCDb2VEZQlEBbSAFyEHIi8ZnHu2Vb/BMOIx UF3TGBe2KCk/29wj0c/F1s3e0s7Yw1WpVYyCCTiFg8Fg0eTQ8qPpQZyGOQ0AgYXQJWlwyqAk7gvAlosNpYrC4eg4LOFoOBGR0YBWiItmUEres7gA6 UWf3u5DrDAygSL2zo6XiNJSlzroz3Q3nepsW 5uXBtsuDrYBp9Xh9rXh9tXR7kvNFZNmRloHB7mdpczOUG1hJDVS8tQSjoBDNVOZnejePHsactqTtcUXUHjuX//ixYNvPn3/z68/  t3r//23Rc/fvXxX77 7MevPv/x84/ 8vGrP33w/PtXT//46un3H7/8E7zm2y9/fP3ZD59//OcvPvkrnMDxk/f/DC94/ujbJ/e/AX4PAcYtuPtfPrqDQH3y4JunD Gvvn5076sHdxAkSNwEcq/hS3jZFjD4Fjj5YgsVQPoSZAc5EErU9t0H272yiGCAavR7IG0TXIF8CKXxKowtYGYBcz9ksv4 zEH628/sjc JCdkXHpgQ4BXu5RToZO9hbmZnbGgkYnNIWCIOhcWjDaDJgXYUbi1SV3bthNoDzg2HAVXpETH64NlARkj2o8LsDk2hGhBIuni8HiQ9UBJ8m4HBLhweEIJZ14PJHoxc9Q10wN2dbC6fbKua7ahFlNTfjCgJYqgNEdNwx9pI10bV4UErC42NtdTVTu3moLW2kKrkHBGPyWaQY/0S50/ePzfzGLoc8G/wxm5d vTBzdcv3/sO7vXXX/74x29//uuffvnhL//84a //uVPv/z5D7/84eufv/7iR4g/fvv3n3/6x6 //vNN/PKvv//8z7/9 Oufv//7N1/ 7bMP//rhyz9/8PyP7z/7/uXTP7x8/P3LJ3949eQPHzz/04cv/oxcfPz980ffPXv43VMkvnn26NtnD799 uA7iMdA9/7X793/5tG9bx7e fbB7a/v3ngNuRExe8j49UNQ1Vba/BzJjVe/3KqRn9  8sUtKJPXvgDJwjlcRNrkzU/Xzz8fODqbnVq0N/5gbNi iKB4P88wX7cgJycPW1tHSxNjPp1NwZHwaCwa7ihoYDdM4xAHAPmMAOphoEhUfQoZBd3rtp2jU1BkHIqAgeqlA62rAQpqDxB9x0B/FzJR1d FRemRcOAv9PFoXfhyR03RWH3JRFPFVGslcIKkt9DbeH6gZWkb0mjnxljPlax9pc7mancrrYu1xspaamMjtjQVKcQcJp2UGJG PAujtpewQHBt9cO7Vz6HsvT8/jcfPf/ 0w//AiT /Ke///jDP376268A4OefgME/AAPETz/945dffvvHP3775z 3459wAl/ 49ff4GU//oAQBcDfffW3r7/425ef/vDlJ0i8/vRvrz/96fVnP33xyY fffiXzz/ 8bOPfvz0gx8 ef8vH73804fPv//w R8 evH9q2ffvXzy7fOHXz2598WDGx/evfzsxvrDS0t3l2avXpi5tnLm9sbiwyvLj6 vP7u58eLa rPr68/vXPnkwY3Xj 4iYn0A0rzx1Z1rr29ehrL3RX/LdF5qaU7aYYAUHZYSFhgX4hvp6RZgb NuY2anECpZVDYJSzLQR vq6EFDijLQ1TPQ0cPq4Cn6LDaGTDUgEvTA4BEoAEmfRNKjkVEwxIPSBf4CjdNBYYGEji4MWqE8IZUJzMJOGA7p6LxrgNoJc4otSKXjzeXTbZWz7TVnOusQPW1DGu5A3F1X04yvu6unvdbNTmtvqXCwk1tZizRKjoVaZKYSONvZjPUuPrr51dP73zy7/9XL974FPF98 Odvvvjxu69 grsMAgIwcN9/ ftvv/79X//8x79   0/8c9//ms7fvsNUCHn8Lf/QF7z73/969// PXfv/z877//9O ff/w3aPHb13/9/KPvPn71 sNnUJ8eXVu7fvvS3XuXHz24 hji3qUHd9bu3li5ffXizctL169cvHZpYXNlbvnc Nz82NTc2NTU8OmTneMjradPdUxNdk9N9p2eGjo9MzQzNTA9NTi7eGptZfb66vytzXP3L198DBQvLT3bvPj0/NzdxvKBvPTSAykFe IOxkftiwpNCPQOd7XztTN3NtNYSblyKomJxRBh3Q6khMfoE8hoChvL5mHZbBTYbhxGFyCRYFiH1mPQMDQ6GoSC1TeAIR4BrUsAfgwskQprTvqQK/VR4Md3/c//gGF4B7wDCrULytKOzuozXbVn 5vOH2tdOta2AnUIMXW9l8b7r0wNXj9z8n5i5F47M4mnk5GntZG1VmquEahkbBIZR8JhFVymk5nMz9GqKLtg4/ytL97/y tP//rNlz8gbP7yK6gB4qe/IYT /vNvCKRfERLA4 2ffwGKf/0bAg7//ef1569vrG/euHT5 tVrKxdWJocnjncNjXT0Dh7tOdXTN9LS11fbNtDYPNjQOtrSebK790Rv38TA0OnB0dMDJ6cHJqYHJ6aPTUwPj8 MTk4NT473T5zsnRztGB9pmxppmTvVPT977MzsyNzU0MyJntOjHRNjnZPHO8ePt58cbj052nryBJwfPTnRP3/m OpAy0ReRnlWWklqYn5S/MGoiJQg31hflxAnay9rcycLMxuFREMjsUg4EhGDoZHRTDaeziMwOTg6CRb3dKBXhXk2HqsDy69YjB6dCnVLFwUTIF1dZNiqpwvtLYlqgIbOCauHJhhgSAYYnD6Mw2HooG ga4DWQSDFB6X21E2dO3Frcfzu Yl7S1MPNuYfr595b2Phye3VD1YX7gV4 LhZaJxMVNZKuVYkEDOYYjaDiIWFKwwNR1Lz2UZiuomaHxcU vDqy2 //Nu3r//2x 8A0i9bkH75HdI/f/kFqT1bkP4NQoGzn3/   svXz959N7TR49ePXvy5MHtu1c3lxZmTwz2Ze9JSwyMSgqNjQ6MivKPSgpLKD5woLYov7msbKSp5XjL0cHaloG6tsHGjqHGrs6q3qGW/uGu3uN9gyf7R04PnJroPTU9ODk1ODE5OD597PREP8JgpG3iePvM8Y4zo 1nxzpnJgZmZobPTB2bnRiYHuuGF0yO9UyMdJ4abhs/3b 4MHZ5bmRz5thaXUl3bnp5dkZ5akpBQuyBiMDkAK8oX/cwVydfBzs3K0s7jcqQx YxKBQmhcCk4Jh0PEyAqBQ0FmamsHSE0YclJZjdUegYLEEfUEGfRMQa4FEotL4OdEIEoj6BpA8v1gce4M6hCBns3pIUrF7sRi6idHbYGlo6mbrkpRyZH7u0cfbR9aWXt1bfv3bx5d31Dx7f GxscNrf1d7NwtDByNBWLTeWiMRMDgmHJ OIBDQszOuTsGgKERpsrJDJmOiZ v6bXxBI3/78lz/ /MOff/kRyXW/gpIgcf32r3// su/fvzrT99/8/3j 3dnT43UF ZnxSenhkenhIUfjIvO2xtzMD5iX3RIVEBArF9woLO3lYmjn4tfTFBo4cG0uiP5jWVFxxobRltbRltaB pbOsubO8pbuivbuyp7 usGRo4ODff0DvcMnOw7frJrfKxj4lTPxGTf5OTA5Mm 8ZM9k6PtU2Od02NdcyPtCye6zpzqnZ4YnJkanp0engNO8IITvSC7xdmh9TPDm2ePXzl34upw65mSvMac7PL9qcUpCXkxkekh/sl 3tG XhHuzn6ONq7mpjZqpVbMF3JoDC6VREdMHhqPhx4WBYtJVBKWxSZwBASWAEvnYBFIBH0SGDyd3bq7YXgK0yDwgjthPRCL18XgdVFY8HKwmLQLVtkNsHoGOH0UVh N09thIje21pjbaa38Hf0bi FjtrE0dXtj/r17G5 sLz5KCA93MFa7mGvNZDITkdjOSGmtkSmkfDGfw4FBLuJP9FEGegQ8ys7cbuHEyrevf/rmNeLoANJf//T3v/0VStG/f/zhl2   sPLp8 vra5MD3V3lOVW5SSV7I8uTo8qSY/KTw3KSvU9kOJ3IDkwPTlgf3LwnuigA7HRqeGRSZGhmXvjKwrSawtzagry2stK 2trO6uqO8urm4srGw7XthQ3dlS0dlV09dUOHGsaHe0cHuweGO4eHm0fG 85Nd53arx//GT/xPjgxPjA5FjX9ImeqcnB6fH mVM9c6d6Z0/0T5/qn546dmZubH7u Lkzo0tnRi9N9q7MDG6cGbk0PbjeWX2yILP2QGrp/hSwdrkx4fvDgpKC/eN8vcI8XPwc7RBIKoVGBM0IjcEigyNDG ghC0iQxKhULKwq8SUUFo9AoBmgYZCK0QETwWHgoG4ZgFEATrth4RUMHrLshCPqgWhwWD1QG4GAwhIMsEQ0nojG4vV2SLgKjVhjrjAFSYG7jvWNzUrOO5Jdc7xjrqWmx8nS0MHM0M3SyNZQrREI6QSSiEHlsakKEc9cLRVzmXw6nUokCjnUgcbBbz9BvPX33/701z/  tMP//rpx98 / SbW1duTJ8Y66itOHIw8Uh6ZEVWTFVOXFFqZMHeyMJ9kcCpNDMiL9MvY59ParJ3QrTHvviA3NTovJTY3D0JRbnJpYdSqg5BTThYfzivt6YSIHVV1vRU1XSU17WVtnRXtHUCpKrunprBgcbh4ZbRka5jo73DY13HJ3vHT3afPNl7cnxgYgLy3tDpyaGpEwOTx3snTiFOYWFuZHF29OL5ic2VmWubC7fX5 9enLg1NbA23rM0O3zpzPAlOGksHTiUXp2550haQkFKTE506P6QgKRA3xg/71B3F18HW1czE0tDpaGUh0AiYPAoAxRGH/pWNI2BlcpZAgmNxcVTwRfQMWioNAa7YcECvANkIQIGB7UK9ARNFXROeCyYC308zMVhawrFgEhCEYhoHB6FwxvAGGOHmC2X89XGYkMzuYm53NRCYWqttnQwtvF38PF1sncyU3vZmXrZWFirVGZykZlSLuOyRSymVMhR8FgWSrGpUsyl0bkUYmpk/Jcf/vEvf/znD3/67esv/3hj88pgR1tZbsaBuOCDMX5FKaEVB6Lz90SkRwcfjA/OTQo5EBOQmxySmxyWlRAUH wR7 8Z6 O5JzAoG1aCDyZX5 8tztxTlJ1YlJVSmp5RlZVVnZ3XWlzcVlLaeLi84lBpSdaR vzGxiMtNSUNjSXNnVXdXTVDPXXHBptGhjuODXWNDLUfH20bGzkKpuDUcPcJKDYDLSdO9kxfmN7YWLi9dubO6sytK4uPbq88v3b 8cb8g4uTNxfGrp3uXz3dv35m9Mrc8ObJzvMVue15 6syEktSYw/BJyc MiPYLyHAJ8rHM9TNxdfexgUgGSuNpDwxn8Vm0chEHAbsN4mElspYciWbysYTkZuOIlNRGLyeru5uUAlkMwN9fRaFwSBTof8F6ZGJBuA4KBRYcwI2CCroeZFmFqsPwoLStUPGl2tEMJxTaYSGplJjS7WlldoKIHlYWrmaa9y3LIO5QmksVolZbAWPYyjkGsm4IgGDzSJJOQwjBc9IzlWJGbG /s/ufHh19dJoT3dZTkZOUlRKmG9ioFdGdFBZRmx1dnxmXGiMr0 kj2d8gNe MK MBL8DCf4H4gOy4oPSo/zSwgLyUsJLM2JLM PKshKKM OLc5JqitNKc/aVZaVX5mUcyckqzc0qyT1cmltckH64KLW0MqemsrCqqqS25nBDQ2lbY0nn0crervrhjoahptqBurK tupj/Q3jQ60AaXy4Y3Lu Oqt9af3Nl9eWXzvwuSttdm7Vxcfb5y5d3Hy9uKpGxdP3z578spE78r82LWFE9dmj20Mt8wXHmjJ3guQjqTFH94TnRMVmhYWlBwUEOvtGeLmCkpyNje10spBSSI 3A8KBW0A c6AwyaIJAwmEwdsSFQUHrEGurCUDrUH9KEH7arebhzagEIkUEg4aHKRqTkVIKFgfZ1AMADGsKWLhkdRcChAhUfrIZAUfIVSoFbwNYYiQ0u1ma3WysnEysVUa6uSmIgEhiK hic0EsulLK6AzmYR8TIeXQ1fCEkiAV3AZIkZDCMxw0aryE9N2BPmnxAEGDz2RvhmxgXlJgYfSg7PTwnfF 4X7e8Z4esb4eMd7 8dF yREO0VF 61J9J7f7RfZrx/dkrAoYPBRVkRhdnhwOlIbkJFQXJ16b6qgtScPfH5B1MKMg9kJO/ZF7M/PSY7K/nQ4X2lWcmFB1MOQy7MSa3IS6soy2uqOny06nB75eHOqsO9tYf7G0oG2ipGjlaNHK0eW565eXfz1cOr7z 69uHFqVuzI1fW5 5tzj 4MHHr3Kkb58dvLE3dOXfiOtShCxO3AdLM0EZ3zVRBRktWSnVGUllaQuGeuJyYiPSIkJRAv2hv1yA3Bx8HG2dLU2ut3EgpkApZHAqerA NKRbFh U GmSz3XicHgbJY3okoi54AWhyKRQcFqsPlQZgEIkoJh0LS4KwnMGgYFl0LJGIJpPQLCaGTkTwAGAqA02moHdIeTIRF/4fMhEbUGmsVSbOpkaOJioTqVgt5Cp5XDmHZ6lQWKvVMj5HxGCJmFwqAYSK4zBJfBFZJmEreRIVl21vLI3wcgpxdQl1dYr1cc2M889JDs7dE3owPigx2DfEw8XZwdLD3iHI09nfzdHLzSbI3yEiyDk 3CMh0isxynNfnHdKnFdKrGfu3pDirMSC9NjSQzHFeQn5aYl7wyJzMpKy05LAiKdGpe LOpAWlX0gNj8vpTg7uSgbkmJKaX5a ZGshiNZzaVZzeW57TUFva1Hjh0tH2qvONZaDg3WmcuLj66cf3R34 W1C08m tfOnbq NntvdeYuaGjh5PULp2 tzN6fH7s6f/zqxdN3Fk5cnR7caCs/VZDRikCCYppYuC8uNz4qPTJ0T7B/jK9riIejr7ONi5WJNTgvlRDuHpdGpJKI4OXIbC6eTETBBgcY5wnZZJkQVEaEtoVBI3D4ZBaHRGMSqRQcC8w6EU2CDXgUDLgMCjhDPJqFrNuiYYmdRsdSaGgcEAXjIGILpRyZkq S8 TmCrWjidbFwtDWXGGhklurtG7mah97w1B3s0gPa1crjUIg5tE5DCJVQGfRCXgSCQ8WUyPmyPkstZDnYW0e5 exN8wH0ldGrH9ckFtimFe4j4ufs6Ons7WHnbW3o427rYOztaW/r7WHm42nm423h52vr6O/n2NwgGOAh12or93BlMDYEN oAM/ocM wQN 08JiU8Mi9saF7wkL2hidlxmamRmRkxuZmJuQdSi7MTj6cmVCYvae0OKM6P62qYH9tcSZAOlpb0NVaOtB6ZKCr8nhH5ejCqSurc/cvLz68vf5iceLGie6llZk7kO6WTt86Nw4NIhC6tzb3YP74lfMTtwDS2RNXT/evNR85cfhAW9bemtx95fA52B9/KCESICWHB8T5u4d4ggW3crE0sjZVmEh5UjaVQyFQRQKaXEoVCclCAUUipqjkbHOt0FDDESmQrawSPkMopsuUNKmSzBERWXwilYYjQwNDxVGoWBqIiYxsfMDjwKajKHg0LN2SSMgyxw6VSKIQyjUSlYVa7WiucrMxtDMCWhJ7tdrP2iLUzdTf2dDdVuptq7DSCGQCgYTN5TOYco5QSKcyYW8SRp/HxkvENB6TZq5R jnahnrZh3raBbnYRvg4eblbu9vbBLo4 jjYelpYWxtqjaVqjVhipBZbarWmGo2pRm1lbmhjbejpYhkWahsZ7pgY4xPl7etp72BjYWtt6hjtGRruERDs4R3pHRgTEJUannYgOjMjKis9JjMjNic78fCRjMr81PLavObC/bXl2S2Ap6W4rya/u66gr6m4v76ov7NmHISydub 9aUn1y8 mR7anBxcW59/sDp79 LpW cnbl84fQcaxNXZ wsnbi5P39 CdG28b7mx9HjhwaM5qbX5adUIpNi8pKgMUFJ4YLy/R6iXk4 jtbOtiQ2kOyFbwqaBw2OZmXDNzFgm5hwTc5aRMcvIhKPVwoI6i8knw0Y7GDewuQSxFC9XEFlCPIWBmAUaHUNiYAhUNAb6XGADVIANnBAwyBAWpw/bV3ZYqJXmhgorI5WThaGNkcxJa2itUFgqxDZqsZOp3MVU6mEtszMTSrgUGh6nFrKtNWJjqVDA5AhoNC6VTMSiiXgMj0820vIszST rubRfg4hvvY jlbB3vZBvrYRAY7B/rYBrvaORtZWSjNXYysrpYmNxkIFu2u4IjsjsyAv wAP2wB3B3jHsKsjzNvDw9rO3tTaXG1uobFwNHeM8gyP8QsN9w4K9gwJ94hKDk5Jj86sPlhVmlpamlbekt9an9/WmN/edLizs2ygvWygqbivuWSgqWSo6nBfVUH/UOs8CGXj7IMby083Fx5NDm7Mn7h66dyjFYA0dRuQQKLbXHy8PHPvwuSdlbkHS6fvnDt5/WT3Un3JaHFWx6H0hkP7q3L3laYl5CZEH4gKTwnxjwNIno6 LpBctDZKMbg7iUzIMTLhao3oZiYsY2O6sSnDUMNWKRjGWp5CxeVJGGxIdGwCiYYiQKWhYyhkNB38Ah0LwwgsEYUlw3U0iYwhE1Cw/QEm6pAq6ciXSPO7w8bQ0M5YbaNRWClkVhqpqVwoZNIkHIaSy5CwGRIWU8Qkc kEDpVAwGGYZJy9VmAiFTAoRNjuLKBBgaLp79ajk4kiCVWloHk4q0J8bQK8bJ1sTD0dzf29rKNCHUOD7P3cbN0tnHxtPIIdvMKd/RN8olzMHK215lGBHjExLj5 9r5 dp7QdWgUYR7unnb2/s4ujjZWMpHSXGVREJ ZHZ0W4x8W5g3rBGlZcdnZiflH0ssbchua81vbijp7qoaOlvR1l/UM1R/rrz3eWTXaXX2irWK4pqi/uXx0vH8ZZAQ16cbys5W5 6cHN5an72xBurM0fWdp6t76/KPL558sT98FTuvzD5emEbM31nWhrni4NKej4EATKCkr5cj pPzE6AOxoftC/UFJYe52PvZmLiYKG5XIxFCmMFaxZXKaXElSqMhKGdXIkG5kzDQ0YspVDI4IehQSlUOkcYlkNh6ODDaRScPD0xZsBoHJwDN5JAaHyGbh2Uw8hYoi4lEMIkbKIarERB4bw6KgdjibGUMzBK7aWME1VnPNFUJTmcBEznOylFibSk1lWgGDh0ehaTgDPhVPQqPA3UlYDB6NxqFQuRS6CNpZAg2jh4IOgU3FikVkK2uBm6PSy9E01Nc2LMQ6PNjOz93Oy9Y22NktwinA39rN08whyjXAw8Y61NchJd49McItKMDR1c3cSCs20SoCHF2C3D0i/Dz9fO0cnayjfAIKkvaXpGRlJe7LTE6uyihuyqk9mt9y9HBTd1lvd1lfR2l3 5F SHHNxXDS2VU53FV1vKNiBPxCazXY8ZOzY5fXzj64tvTkxtLTC1N3poYvbZ59tHn24crM3eXpeyszwO8JQFqZubd25tHG2YfLM3fA7x07ulhTNHQkt7PoQNOh1JrsPWX7EwoSIg9GBe4N8oz1dQ11s/OzNnUxVduZa02sbcQqFUUuISuUVIWCaqxlmpoxlBqyXEkTiikMAYkCW 84gIdE45GpXCKFieNziCI iUXHSUUEqYwAOyDIJAwdNhJRYacKlsfEcRloERfFY2FpJPQOdytDW2OJRsaUCRgqMddIITZXCsxkPEsjrrGGrRXKoM9lkylsCpFJJAEVOJew6TIem02lsilkER3yHptJZmAMoCPDikQUUzXV1oRlZyf28zYJ8LP2c7PztrfzsLR1MraI9PBOCQpKjwhIjvDcE t9cF9gVoZffLRLcKCjf4Ctk4dpoJeTp4WTi5l1lL Hn7ddZIhncnhwemxUblJCWiTYvLiKtML6zPLGnJqytOK6rIr2oubu8q6u8t6Oiu7emoHjtSM9VSMtpUNNJYMtR4511hzva5k8N3lzY Hh9ZVn1y4 WZy4NTt29erSU6hJkO6WwS cuX/14rNLi4/BOGwsvLeGKOnu2RPXB5rPVhcOlud1lxxszd1Xk5FYuifqUGzIwXC/fUFeCT5u4a72/rYWbs5O1jaOYhMzprERW6tmWVryHez4ZpYslQlVY0TXGjHFchpPQmVLqEwRmc4lkFlYPB1NZuIZLAyTgQb/zeECG QJCxIBBZNWIQcv4OHZXCydoU9nGpBpKBIZvcNYxTNW8uQCBkwQzNViY7nAUMIzk0vAf3NpJDGNIWHwhAwOl0Wj4vFcMh3cI5tMknEYIiaDQyZJWTxDkVrM4lFJeAGTYiiHysSxMmUbaRj2VqJgH7sIb doL1cfa4cAR4eYMOfkGNc9cS4J8Y7g4g6k u/d5xUb4xwcbBcW5hYS6RQUAMMWdzcn28gw10B/myB3Nz8nz0A32FEQFO4RGuMdXplWVHOwtCG7sjStpCA5v/pgRUN bVNxfXNFY1dtZ399b0/tQGvZ4NGK0a7qk931JwbapiCnQa67tfr86oUnZ0/dPDd56/pbSDP3184 urb8ApQEeKAygYMAbZ05frWnYRbWo8vyuosz23L21aUnlKVE5ceHZkYEpgV5Jfq4RLjZB7o4uDo6Kqwc2CZmbEtToaW12MVd4OHB0drQtSZMMxOeSk3jSChMIZklJXMkJBafQGfjGfBgDI/C4hBg6ySXh2OwscjoiIpBG iSyAZ8AQ7YECn6VDaaREfhyXoEsv4OeE5DyKPwaWQJm2os5WsEPK1AYKNU2BrL5VyOnMkT0thiMPpkMoOAZhHwsJQkZtAVfAafCnsx0WwqGRCaSpQCOo3LoEq5dK2arTZigQ01UbNi/aySg92TwlxiIhzjop2S41z3JLomJzjvjXfLiPfdF UZ4ucQ4Gfn52PjA/bBy8HPzyEwwCUs2DUh3is 3iM42N3f0SvBOyIzKj07KiM79mDJ3vymnKrWvKry9COVByqrs2rKDlTU5Fc1lNa2VjW31bS21nQ0V/W0Vh3rrDve0TAyeHRuZe7elQtPbq 9uHLh8ZmT15fnQDpPQECrs/eWZxDLcG3lGUDaOPceHMFZgI YPnapo Z0deFQWW4PGLzc1PqMxPK90YfjQjIjA1JDfZKDPKP93IM8XU0sLJiGpiwLS5GdhcTbTW5ty7e0EJmYgqljmRixpHIiT05kivAsMZElIND5kPHwsEDIgE2TLCqdSaCzCDDWI9EwsLQBPoLCQjFYsPEBBduMsThYs9gFTzVB8wuQaABJzKLKOEwRg6bkw CHL4aSQyaKGSwtT2IkEIjoDCIaTcXqC hkM4nAWiW11oo0Eh6LRIHKBHbcWCw2lYrhgopPM1NxzE15MjlDJKLaaNixAbYJkY5J8U5xcY5Jsc7Jic7xCU6xYc5 HnYRPi7 DlZuFuDiVKYyjYXS0MXZzNfbPi7KIzHZJy7a29PXPtzPr3RPdmVaYWlKQSWA2V9cnV7clF3RmFN3tLC1s7ijIa 5NKOy7nBtdVFDXXlz/ZGWurL25vretubB9qbh4a65lfn7V5ef3lx/cQmBdOPS cdXtiHN3Vuee3Bl6en1lZeXAM/i4ysXnm6ee29p h6Yi7bKiZrCY2V5AKk9L63hQFLFvtiixPCcmKD0cN89gR6xAe6erg5iW1uBrZPUxl7u6qRwcBRbWHKszISGaobGkKHRMuQqKl9G5isoAhWVJyEz2SQEj5AARzaXymBTGCwKHra1wlIhF8/iYfl8NJ JB6cOV6g0AybsVIGnAYmoHSIOVcqnStk0JZe1NZoTSLlsAZUmZTLMZVILqdxWwpUwwH/jYV ZiE0RMmgiJlMt4oqADw4Po14lV8Kn0pViuqEhWytjmMjo9kY8NweZva1YJSG7mauCvKxiwx3Cwu3ioh3jYpyio50ig5wDfOwDPRxdTC0s5CpTlcrdxsrBytTTzzowxDE50Ssm2S020SUqznV/bHhOZHJBYtah MyCpOzCPXnlaYVl 4vK08vqcmvbi9qaDjVXZzWWH6yrymmuyW uLTpaV9reXNvT0TTQ1Tg41nsWXMP11ec3119uLr53dvwG6GYb0gqI6czDayvPtyEBpysXn20uPAZTfqp3taXiFEAqz stygRITZnJVWlxJcmRebHBGeF KYHu8T6ObvamAgsrgb2L2MpODLndyUZobMbSmrC0WoahlqY2ZEJjq5DR5YZUgRokRWbwSHQ eAcSh0cTiFiQi6hMEo1DpHCwJA6OCVWKAnvz4CEZPImCIdINSAwUjQHb9gx2KGAiJGHCDjqVkGMo5kuYdD6FAipkEghiJlXOYhsLpVwKmUbAwvO5dByOgSewiFR4AVgJAZcl54qQ9pbGYNKIcilDzCJJGAS1kG4opVmb8jXGLDOtyAsGFuF2MREOSbGOCVFO0VHOIUH2Ho5WPo62bqY2lsaG8J gECe/YHs/eE2SV0KiW0isQ2KqS9Je77Ag1zBP30Ox6WV7D1WmFtRklBzZl1 2/0h5RkVddm1H8dGmw0drDjU3HGprLYEGtrW2tK2ptutofX973UBX/bFT/ec3zj0CQhBwcn7qzg0k7yHpbu3sw/Vzj26svby 8uLyhadACI7gHWB2d7zzYnM57I8frjjUB61SfnpLZkpNWvyRPZH5kPEiwDt4xHs5utubi1xdxfauEitbgbk508GRB8bB0kJgZSkwN OAcZAqqZD6LM1hzokns9EAg8jA0nlEngw2i4OwyBwODT7pZCasmuLIBNgsjuPziEIBHqZ/TBoGdo2zWThYid9hphYaKrgKBVMiYmolAkM5TJvgnwJIeBGVxCVTBDTQJB5WYEloNAWPI MwDAIZbB4sRCqkTFO11FAmErBpMKgX8xkKAUPOpajlXIWcJ SQ5WqWmakgIMAsOsIhIcIxKdohOckpNt4pNs41MMAZJslxPl5eLjYevpY flbBYbaB0fZ7U3yjI1zDYu2SU10jYxyCgx3D/LwPxew5FLOvJCmraM/BouScSmiS8hoac q7jvR0VfQ3FXXUHWqpzm2pO9RaV9rSUN3RWtPTXt3fWTc6PrgM e3WBkB6sb7wENQDJ1cvPAZ3B5AgAQK8a1uQri0/v3zh2drZ92BQNHx08XdI/SXZnQXpMMGr3Y94h4L40KxI/9Rg9zgPextHO4mXj9LBTWppKTCzYBlbMm0cxHZOYisLnokRW21IFyuIIgVZqCCzJSSGgEDmYJkSOCeQWLD3GEdl4liwmsEgMxkEcGVEIuQ9LJuJE/DxMjFRxCEI2RR4sAnmrTuMxXw5JDohU6vkqOUcrVwooFNhxUjEosnZdCaJxCSCjEh4FAZngCJi0Awink jsEk4IQVnqmaZGgmNVCKVmK WC0xUfDtHhQXsoXQ3gg0aMkBoxXf3UPoFG4VGWMZF2SUk2CbttY9JsIuMtIuNd4wJdYxwd/RztfP0tgrwtwmLsotLcEpK9AjysA8OtI4Ms/XzsQoJsQ8LcE8OCM4ISyrZk1OYnF2aVlSZUVaXU9Na2Nx5pKu7snewbri7YrC5pK xsLu qLO5rKejtrezvr zfnRyaO3yxSe3N1 CgFbPPthYfO/mxksk3SEyeu/qEmzpegl4QEaIx7vwdGX 0dmTNwdaFyDdgZIq8/tLc7pgzJq9F/EOKTGF8WE50YH7w/xDAlyN3Dzkrv4qD1 lg5PY0lZg4yRydZP6 EisbARaU67SkKnRMMVSCuiGK6NyBERQBoFqwBBgOUISmYHFkzEUKp5MxrJYJCHMI1jwPC2MzFECLjIa5zDxQhZFSKdIWNQdQEjGZioh18m4ahHbRMkzhx5aITKHcZ4YSh0eqhHoBkjDCRmDg4BtKAwCXkwlG4qYGgnT3FxibC 0cJNAalYr6JZuChMnsYWT2NiMa 0osXcUOziJ/P3MY4Lt42NsEhPtk/fYp6Y47Ut2iQi2DQ2wD/C1Cwi0Cwp2Cg21jwVPEekc6GsTGm4XEmoX7O8SHOoUFeJ IDo6PzatfG9u3YHiqvTCyv1Hqg UVGeW1WRWthXC8jn0sD2dlYPtVTD2HuysHuiqG2ivHeqqPzE9sn7l4tPbm 9DWludfwjnIB2AtL7wCIoQaOjWxivAc3XpOcQlgDT3cG7sRl/zPECqKx6pODRQmr0NqSEjqXJvbFFSxKHY8Fgvf62bm8TWnuvuJ3Lzk9i4QNIT2TkLrZy5Nq4chTFVpKAoDbmGJnyJiiGQwf4HIhdWDGQUoYwCi4E8Pg0qhFjAkgk48EgTl0uWikl8Ho5MhuaJwOUSJXyKiEPmwuycTmDRiTt4VIqGy9PIuAoJw1jGt1aLrJQSNZdnqZTCRmJohgQM2GJBY5MoUliQRcoPE7paNpkGgwYejaJVMuVCglJDN7bhmjmKDC245u4KC2 5nY/awkZkaSl0sIMjz8pKHBVkFR9jnRBvm5TikL7fft8e  hY6 AwS69gG99AG69Am9BQ5 R49/hA1/hEp9h9DpFxjrEJPhFxbpGhnvlxSQVxKQVxaYWJqYV70gsTM8v25hXtOQSSai6qaz3S0Fje2FjZ2lrd0V3X09vY31E71F5zvKvx5MzxTRDKFqQXq/OPwCYApMsXEC8Hurmx hIy4VtIm4tPlmcfzAxf6Wmcg3QHkCrzB0pzumEWnpPaCMvF 2JL48NiPLzU5lYcB3tIawJ7M5Gzs8zJS 7oJre1FRmZsI2M2SYwV9WwJQo6V05hi0lcKZkrpgplNDMzjlrF1SjBT/GNVGIoE7CszeeDiSCp1FSNmiyXUaQyiqGaaWzIEYspMjFVKUXG6jtYWIKUxjAUss0RQhIjBQy5SRwiEZKegs9U8zkQlltDVfDZMg6HQyKyyEQaDkvAoOA5d6WEoRTShJBJ2Tgun8hT0AVyutZeYuoo0SgYcg4VpGakYSuVTF8vbWyiTUy8dVScddJe2z1JtvFJVoER5l6Bpp4 lu4 VkEh9kkJ7gmh0Oo6JSTbR8XbJaS5JaR47I0PyomLzEuKzUqEjQ/x2YlJhXszyg7kVRworDpYWp5ZUpVTXnG4oqqsrqG8ubWmrb2mu71mqKtutK9pYvb45eurL25vvrq 8hz6VtAT1CRQ0uXzT0E6N9YhDSJKAoMHX66DtQP/PbTZVT/TVHZiG9KRHKRVyktrztpTkZgQ5 2jsbET2DqKbKyF1iYiP1d1UJjMK1LlGqi0dRKamHG1pmylCVOqpYlUVOiNaJC7BHgaCwfqUcgFUik8bwYr7RSZAADA JVjAm5QTVFISDIxWSIi8vlYoZAkk9DEIhLMmZRSilxK3sHGERU8tolCYCThweMbYhZdymap VylgGOq5WslfAupxEjMhkYKdtzBKJyGJUDA9IGKx1FxaJhKsGl4FhErYOCFXCKeCA9/7IYxlMpMIIWH5SFRknESIdPaVhEYZBITbRMXax2fYBOXYB0TbhEdbRkWbRESbRkUauMXah0RbpsY7hwfZZ 0xzkqzjYmzjYp1TEpxT0x1icqHOawHvvigjLiQtOjo7ISkjLiUwqSM4 kFh7ZX1p oLIyt6aiqLautKm1qrOztr vabi/bayvdXL2xGWoRgAJNASQbq2/ugGQlhAvB2BAVYDtvyGdn7p3qn to3ZqG1JVwSBAKjrYkZNeEx0f6hqgdPOXuftoHJ3Frq5yKyOBp7vYw59j6sS2cuda2LM1xnS1CUOoJquMuCpQA5QiEZHKgfJjgIfdKUwyh0tnIR0SSS6jmxgxTYwYKhlJxMJxaRgBiwD3EMapsFMcChKLAT0Thk2HOR52h4LNNFJyLUwF8KCEkse2UkgcjJSWxjIzpdBEJTSWC80lIhMxn0 nSpgcCHDbsCzLJ1MFVCqLSIJxEBV2 2EMiCgDPg1PwsNjAbvg90dwGAQJj6YGxygTaBXcgCCjqBjLmBir5HjbhASbyHDLABebMD b0EjzkEjz0EhL/zBTXz/z8BCbKD r2Bi7iDjb8BirPalOUXGOEaFuIV5OYQEu2TGhOfFR 8PiCxMOFCbllO7Nr0wrrj1YXZ/b2FDQUlfc3FLZ2lHT3ds41N86MtA61t86NXfiCkgH0t3V5WcglFsbUJwQSKCb3yG9gMoEnLas3aPF03eOd68crZ58C6ksp7fwYHN0rIe9C8/QhGVqzgNT5 Ikt3cSO7qI7B35rp48R1e ypAmk8FaH14mp0iUZLmKZWQkUqm58FwXm08USSkkJg7qOYmGhb5VKqeZwVRCSZUeUOmqAAAKPUlEQVTxiXwGlkNFs0loIYsg4cInHnmils/Fs6kGMALn0rEcGgpmdxxjQx6IxljDN1YLTJR8rZxnZSwyVQgkTNgzi1cwWZZKiZRFg7mqkEblUakcEgnpdhkMPoVGhqSHx5CxKIAEqJgEHBOPETBxahHdzkjobCqFJUQbU6Wfv1FkrGVktHVMpFVEiKm3o5mvhbO3g7m/v3FguElghGlgmLmnn0mQn1mEl3lsqG1UlHVIpGVCvH1gkGViDPT3vmFenoeTYw4lxBxOTjuccKAkJRe8Q112eV1eFYwb6ksb2yuPdtUf7W3q7W0a7Gsegb1B/W3TW5BeIpCWnm cA5v3wfW159uQgBaipFXokxAxQYmConVu4s5w 4W2qonGI2Pg7qoKhkpzj6YkRXg4i8yMGMYahoUlz8VTBUNVB1uZrZPAypZnbcwzlDMUIrJCRJKKSAIWPCqLFUooMgULVpKUhjyhmCaTwgZXHIx/6GwsNE/mQEhBk3LwIgZkIBh4Y9lUmHkTxXwCj42FjXlMKopLxwjhF0mJiGIeaYcGmiQly1DJ0cjZChlLLWPDXM7eROJorjAUcxl4PIdAZsPgDodTcmCFiSqiU5QcmojO5FNYDFAOCkXCYElYDAF 9ZTuLiYRqxUyJUKSpZnA1V4S4Kx0t5C72ih8fQy9vLUeLmofd42ft6mLlbmToaWtodLVQe0fauIRZOQZbBYQZu3jaxYZbBUWZBUSZuHlqw3zMw/0No0PcYmGbUa npkJoflxUYfjkwqTDhzZC6OH/OrMotr8ksri8pqS6qby tbqtvba7o66vt7Gkd6m8f7WmbkTV4EEWLgrF5 DnQNaMH0A531tGTHl/w3p0vmny3OP5hH/fa61cnwbUmX UFZ6urc/39FNYmknNbcWOXnI7V2l1k5CRyeptT3f3JSrErIUfJpcDPWDCvVDxCdIRASxBNm4yoBnm0VkjYalUtMlMhpXSAY9yRV0IxVNwSNJOAQJBy/mEvgsWLnAgsGTy0hyOYnHxXLoGA4byxPitkvUDktDsYkxz8SQa24oNFPzobc1EvNgVclMwVdxWRIOUcajcsgEFgkGDUQaCQszPQEdNtrRYPDKJBAxejo4A30yDksEMeFQLCpWwiUzqXiQrUJMM9YKzI0EpiqWsy2sKKpsjTRuLhpPTyN7U0NHYzN7I62zjaGnJzwsrXCyU/t4mPoHmIT5mcQE2QT7mjvaqnycTUK9LCP9HBMD/WICXSMD3WMD/RMDwvaHJx6MST0Yn5GXkl0MI6Ks8prDdS3gGio7Wiu7umoHehqOg2s4dnTu7Km3kJ5dRrz4qy1IW7lu7X2AdH1LSds6uzjzYHbsem/TPFg7WJatKRwuyT0aHeHkZM 1c5O5 Kpc3KUuLjDqlji5S23tBaZGTJWCKhdS1XK6oZaF1HkFxciYodXSRSI8T4CncvEUFlapoRka043MaAot1VDL1KroStAHG2ZsOAkQYhMg8SiEFJWMrFFTlHKiTEIUCQl8Po7Dx7B5KL6IACuzEktDoYmCq5VzjFRsjYwFD02Yarnw 4t4dKJaSjPVssUCKky4RQzYIERChg5YHIsI0zwCCQO/G2IXWncXjCGwBvBEtS481EHGodkU2M9JIGPQJDyGRETB9iJTeFRGLrdQapxsFY62Eiut1FIht9PKnSyVdpZiR2uJt6uhh4Oht4vG10UT6Gzs52bi6mgY4mEe6mEZ6m2zN8wvNsgtNtgvOTQi1i88Pig6ISRxX T rIScwtTisoNVtQUNzWWtRys7W8t7u2pHuutPAqTh9rmFU9d VxKM7N5A2nYKiNNDZkJIgI AinVh v7UyJWu jNvIB0eyUzN9PdXunoJHdxFDg58Dwehm6vYwYVvBRsZtAyliKSUk2Vgw QUjZomFRI1RjS1hipXUSRyklCCWAYY YilRAsbuoUdw8yG6WIrMFLQwcsJ2BghCyeC3EjHculoPhsLoRARFSKCBPaOM9Ewd Bx8LCWAY z77BWCc00fBM1z0jB1sjpahk4RbqYR4W2CQY/QhadjEcDAxYJHpSiscg02OsMD7LBM7fwTBv8UpytB3Th6dx3YE8zcIKRBBmHA5BELPzaPXhQDcUiE9RStpWZwEwjMpHL7M3FtqbQLPNhTmgqg4UrvrGCb28p8nE39HbSejlrPB0N3azV7k4aF0dNoKu5v7NJiJfF3gi/xGDP1MiQwr37CpJSDydnHkrMzUnIK9xbVH6gojavseFwa9ORtg6YBtX0ddWP9jRDrjs93HHm7KnrbyFdXX5 662SVl/cWH0FsV2QABJ4P7B2E4OXOutmAVJD6WhWxsGAMFMvF6mTPc/elu3oIHR2Fjs7Ci1NWWbGNK2CrFFQNHKyVkv7/1i4up m4SjqixqVwb7aru22rmu3des 2q4rYwwGyBgoNFHEIPEDUJEE QgGTVB0iGKIMsJUDDE GVkkmijGJ9Q3ozE  ehf4ymYLMue9nJyf/fcc8 5mYxPTXpSFmPGxEomUkxcYcOyh48SIZm25LiQKxontRwHYSKNZaBCS4JD8DnCvEsMOP0eW4C2w8PN xx8wBXYI3UR0S0E3f6Ak NcB7LQ7mQIQiggFhUnQf5jCMnPigzBEQTM3y7bUbetjoCbpR65msNoPMi21x2xYrd7YWnrC2lCbGbRlRC/plxgjaSVA6HcIWxABH/IDy8R7aNI8Htr54t5WQlnUyIQUkQOI7ORDLY2SsWWZHebbHYoJwpaT7daKmpmTyN6EkAaG wdHShdGzJnLg/NXrk4Nza eP3W4tTCvYnyg5nllbnK6u1qpVx9vryxDpDQkCowFW/DbrdT /7z619MrIABU 2 vvC/kr6ANVgT0j5r2P3w5/Pb31ub354 el9ZrN25cf/MOb1oxortka5CuPN4uNSX7DJjnZ3QTznDwLyJNwaZHzqjg0x7DRWw0aiGsODSc2w675d1RkrCveUDlxNDZFKhs82cnvG25/l8M6fJVDQImkdKMQ86EE/bIz4yBOZNw3rXwHmdwSA UIwgs9oPGAlehXE5wnIMCcMJ7h0yhB0hafiJKPhYYGHeOxeFLPXeWS/gYV0fQCgUUTTAY0VDDx1EcTXUHXPbHSxJYATGfyYEFotEnqFlAYt5P7KblvIUCTZGBQxkTRq2ZJF8WlJCQT0eUqMW189pkSZFatfjxZzai8LqTfedypw 29hvZi8MlEYHS1cHT05eGpgePj85OjI/MbswNV eKi9NL6/crFTmq2t3n1Ufvlhb2rQa0uPay9XtV s7H7d ACQUE0CC2r2vLwAVwIPnDpWE32hI4BRgDZ9qv15v7FaX3z0pvxkfHunuFot9MbM/YfbFOtrCbQWx0Ma3tHCFVi5r IwMi0evKe1VVVqJUSpot0iIFkjOeIqKG7Sm40AKA0uXovniKSZncM2GV5FJXWN0lU3JoOlUNEkGRHhXGwSvS2TdAuMMUHh76nm/0 utD/A4QWTD5x8AAAD//9182ngAAEAASURBVGS8hZebd5Yt6nUn6BgKxNLHzExiVkkqUqkYXC6XmZliiCnGxBiHocPUSSdp5p5pmOmB wbunZ7/5h3Z8/rd9d7Kt771FSSOtXXO2Wfv/dOaQKVUKcmz8Xi4v3/duoG 9X1969Y9 yxcTz/11BNPPPE38M8T/ PJJ/7H0089sfbpp9Y /SR8 8knnnzyiSeeeurJdc8 3b9 LZ6MYolYMtq7M2hcZ1GLJ2QSYZAkh6VEHJdJwhAJkycNljA50uIoWyB9Q8jYUs6VywWtEOjVgpaxhGpebVXsZt5qV 3xUXe8bU1O AtT5ZXJxupke9dCd9fS3M7FpSNb957YdeyFA cvHrhy fCNW6fu3nnh4b3Lr9  9OYr195/9frHr7/0xTv3vvv2kz/96Zf/9adf/eXvfvq///iLv/zp13/5/c//8w8//8sff/Ffjy/4En70mx/ x0 //z9/8NGf3r3/07uXv7h65s3VpfHRtjDSltvDUqsrVst03iHSHuqaibSLpO2krccLadLR4paRtLSkLEQkMaLwEYWNClyUFSKKlDAtXNdxSUnIWtI2Ugo9KOODPN7HE4MUE6KlQZLuJ9kBEu1nkBCNhgmkn8D6KWqAokIY0o lBpDEhlhk3RokOoAjg8lY33Nrn37u2afXPvv0008/9eSTfwMgPPkE3OF68qknnwDENqx9dv3aZ3o/fPJv4LZ27VPr1j/Tv G5VKRP5VAcjzN0ikjFKSRpKxSHJ2OD4WQ4LpKYxuASQbIoIlOYzhKuynoyq1CESJKOzPoKF1i8b0hFXy64UiWrNQpmydGbJas74Y803LG6PzOW3zzVWOk2d8x1dsxPL3fnds1tP7j50JkDZy8fvXL56M0bJ /cBZAuvXn74tv3X3z/lWsfv/nyl /c/xZA uMv/ uPv wh8cdf/gUA /3P/hOu/xekn/3n3/7kf/3q23//8Rf//NX7f3jrzg/vXPrs3JGrE2PaZFfvjEmtNpevU4UsXcqzuQLhOSlXT7paKpshsnkMQNKYuMJFBCakqXFFTOgCABaTpYShJzU1qcpJRUlYNqorMR4bUOkYjWwUyZDARUQ TDNhggyxxKBAR3gmIogJmgsT3ABODqCpjanohlRkfTyyfg286M88uqAy4OV/DMBTT/7N04 wgep55uknn3vm6XXPPgMAwY htKDCnntm7cb16/o3Pjc4sC6VGBCoBJKMclyKZ1JQPSyWRKJxJJqg0RSPYwKBSSSl0pwuURpLGBypsSSNolQK5zBCJEgeZySSNQUho0sZQ6lnzUbRbZXc4brbLqanx0ozU WZ0eb86PCWqe7qzNxyd9PW2W07F/Ye2X7qwqFLl47euH7y3u3zr9  8Mat82/evfy9h9c e PlL9 6 923H/89FNB/g9R7 G QHhcT3AG83/34P375zb/96PN/ vydv33t1g9uA0iHrzeHhE5XHGlzlRpZqrPNtlJp8X6FcNK4ZaJphygUiWwG8UzUUhCZi0h8RBZjkhiV2CjPRhU5lfUJ20y6NpLJU7aNCfgARwzwTJhMbYQ7z8d0LcnLcQCJp8O8EOb4EMOHCGYAZzbi5AYM6UMS6xOx9ZHIc2vglV/3zFNQR ufhQb3NFzwnaefhlb2BHS1Z5588rneLzz73LNrn4UfPAW97slnnn66b OGULS/b2DdQP9aJBGi0EQiEiOTCSyRYPGULiI0niIRjCdxFiElkgYYRJyWOUpkSYWhVIZWWF4TWImBmiMFklEE3hDFQJNyhlry9WpgDmWNdskbqeamRivz07XF2eEt891N3ZnlqcWF8c2rM9t3LO49uOXIiZ3nzuy7/OLJl1869 qNM6/fPPfW3UsfvHL189dvff3WvR/ N0i/ADCgeqDL/eVxJQE8cMEzlNFvf/S/fv71v3736Z8/feu3r978 vbFzy4euz3Vcdodrj3GN5pcvc1XW2KuyaWH HxbyTTZTIm23aRlJ0wz6TuEQIR4KiJxcUmKqmKEwAdoctCSk7k0kS2QjovKgAq kSM3CHyEIQcZMkxxYU6JUmKYESKiGpXVGNwZKYRSgNBGkuoHkBLhdbHQutDg2jXrn32qb90zgxufW//cM uee2b9 mfXrgVooKE98cxTT69fu3ZD73oOQHrm2afXbXxu48C69RvXhhIbQ8mN/QPr tatTYXDWDyFxJIcglBIiidRhYYHXKQplWUEklcZSWNlkeIlipUZWmY4lYW6UTxL99NSNicVykqhquaLZi5tZSwtb2kl1yi7ViOXbhWL3XZzdnxofqy5MtPZtmlmeXpxfnxlZXrHtvn9 1aOHtlx5tS Sy8cvnHl5N1rzz 8df7te1c fnjti/8G6ZO//8MvYAj12t1jYODhMU5wf1xGv/7uP3721f/17Sf/8NHrv3p44 uXL352aOfeiRF9fFwanzZG5q3yqOhXab9BZ9tiuskFDcqvEm4Ft/OIHSR1NaGKCZGJ8nRUFuISH bZsG/hWY/MZ2nHShlqDAaYyA4oalTS4pwUYdgwyYZEIyrqEUGPilpUseKcEkLxPgTfgJF9KLIxmdiYCG9AYhtTsQ1rBgeei8c2RmMbNg48G46u3ziwdt06mEy90tm4dl3fc v616 P9A8AiM888 T6vmf74 v6oxviyQGUCCWjg6lwiE4l0FgSiyVYNMUhKIeiCkWyCMWiUCKcTCk6q5u8bnCaxioKLSmkojKKLiiGaLi6VczbtaZVrZn1ilsrBaW8lXfNkmeWXK9ZyNfStYlWa25ieK49Mj88OdeZXZhY3jy9bXVu9/b5g/tWjh/bde7Uvivnj9y8dPz 9TOvv3zh3XsvfvTwxpcA0ttQSZ/8w 9/Bqj8b6iYx6jAA2Dz HpURr1e95Mv/ UHH/7pg4e/eHDt zfPv7e0UJyeNsanzfE5a2jWLIzLmRqTrzKZChPUqHSNDiqUncWNDOrkUEWCLheXhLimJnQ9ma QlaZQLovlPAdEwzFR18csLykpEUGJGHZKtZK6G1ftOCMNqm5SNqOS3kOOYkMU1U/TAyjWJ5ERlozgiUEUHUjGN65BEBhTgwjRh7FhnIkMAIPYCAg909 3AUnFWZYQRJaAp/7B/v4Ng9ENofCGvv7nBvvWUXicZRCGSnIEsDhobgiDoSIBNIEyoa3hNI/RIsEbnGnyliUYKq1KNICkaryhcYYCmAm6KbpFL6gWvWLGreeCei5bz fr UwlbRc9r54rtor1sXprsj06O9qZG5udHl2cHduyPLVj 9K nUuH924 eWzXhecPXL1w7OUrJx/eOAvE4b17L37y8PqXr7309Tv3fgQg/RWPvz48xukxQr/ 7t9/8YN//eFn//j97/3 vfs/fXD1q0unry1udrtT6siUVhuXq6Nyvs0X62KxzKfzeLpI5Oqkm0VMN6VAu3OTupFiiBCFDyhy1LSS5QZbLrOOmjKlpCWmVCmu2ynTRUQ9Kmsx3UqoZoJXw6waFrSoZERYYZBhBkU5TNEhAu9n6BCODZD4AI72IUgfRoVRZGANx8ZlFeGUhFvgBRuhFCQlxEk1Kdqs5AqSJzM6zQiUpvKkEGeFpCIgSDKMxiPJwQG4k3icxxEqlUJjCI/TCkdYMp22OUvlFGAKnGhwhsU7tujovG6qmiHpjuKogmFqmqOZgemV09lSEOScdMnLVLO5Zr7YLJfq5XwxKFRy5aFiZbgKIE3MjU4vdRdXZla2zm1fnd29fXH/zuXD 7eePr774pmD184fu/3i6Yc3z77z8oUP7l399NXrX77 0g/eufdjAAnAgAvYwf//AZj3r779t5999T9hIH357t 9e enL1/ YM uqcWt9uSKOTyrNya0 ohUaQmZIhPkiUyJCEpUsUY221w6QOEV123EzaLwugMAgFCpzORzlAOMHNgaHVH5hONhdoAxQpigQrwcVfQUL8VQpo8SB1k5RNB9NAkA93NMP44MUGSYEXuwsWQYvsTR/mRyA3CHNZJOZnJ8pkBUqlytxisOwduM6ApKIGJiEkgJIeG8JbAmA8hpGUE1CInGTJYk49HYwACWiALJFnCcQXGRoHWBMmU2nRF1hVU40ZE1aHSe5Ppy2hYcU7JsxXZ1N3DdYt6pl/1W069kswUnl7XTBT9XSucr6WKzVG3XatUsXPV6od6qtDrtzvzYzHJ3ecv0rh0L 7fNH9i 6eD bSeO7T57Yvfl5/ffuHD0ztXTr9069/bLFz68d/Xzhze evOlb969/5NHIP0HIPQYpMcPj /AFx6VUa/XffPRP3z 1t  8/JPjuw6ODYuzm31J7d5I0t2bVKrd3q8rlDn0gUqKFBOlqiU6MVhzTBSupNQrbhsx810MpPHs3mqVKQtJWnClGIjwLMlPgo1pHoJgh kqUEgbxQf4cQwxQ8CR DUsO4mvBzipZOKFGaZCAwnihnA8D6S7EeTG5BkXyyyPhHZuGa8oWzvON0GOzHMzXVVjIsyKoHRSVJMkipOSySnMDxcGsdoDG/zmi96rigxGJYIp0KDHIoASLCrAslWGMZWWMcQgQ7InCSSskhKCqWYvOaIviW4puQ4qhtYQc6HK1srZxqNdCVbKLiFQpAvBIW8Vyx6lWap0SoNDZdarVJrtDk82m5PT0xvmlpamd62dfbAjoVDO5cO7V45dmA7lNGF5/ddPXfoJRhI155//db5d29f ghAApL25svfPgbpdz/ d0Dltz/6b6jgAeCB63EZAa8D8v3VB3/6/I0/PLj2xaa5bnda7WyyJ5at4UWrOikXh4V0GQ18NO2T TxVrpO6iwhiPAjwfAVVnYRkxAslamKar4zwvosAkXNsVIGlhxyUpRj0NCOA34lJShyqjeYGYfaQQpiWQgw3IChh3YurTlgxQ7Ie5qR VhggiRCBDaBAwZN90ci6BMyk81tyW2rOcJGj6AhJx0UgXkJKlPF4YiAUG0ilwpKAyjKNYCEEj6FCgpMxwwb6jMoGIkg4kDaAR6YpINOmwvm lM7IriPJrCrTmsjIHK4IPbQUhTEs2XPVIDAyGStbyGWrpXwpKJfSlYJXznn5cqZSydZquWa70hqpD4/URsbr41Mjk4tz06srC9u3bN2xvGfH0pE9AM/W4/u2njq04/zxHkK3oIxePPXK9bNv3brw/p0rn9y/1gPpjZe/fe/BT7/9 M / eG/Ax5wPQbm8TPUEDQ6mEYgNPzws3/6 v0/3b313ua9C91N2aUlZ2xeac0Zja5WGZOyFTpXpPNlCu5BGnMzqGYmbAve/rjnYdDo0nmyUhOKwCkKpKEkeHJQ4aMSHYJK0vUYB7zOiGpOwsqhsp1kuLCoxAU1SvKDKbwvntoQTW2ESzITTjomm2FejYhiWJQiGD4AMwnH igytGbrsNSA/iYmeTFpmpSoEZKMywASEgol ymAjU1qEkkyMZyL41yMhXVaR1gVUW1KNTkROAJFSwCFjFo2nckr2YzqWoomqqZkmrIBFM6SbU0yNdEwBNuWAaR8xsoXM2W4Cl61kmlUso2CX65mG41iq1UdHq6PjNRHJ9rdyfb0wvj8Und5ZX511 ruXStH92w5uW/bqUM7Tx/aee7o7kunD908f zO5ZMPbpx54 b5d1  9NHdFz99cP0L2EnfvP3d9175GYAEeDy AK2/Pj9CCKYRlNE/vnLn7eOnTyztHm7P2CMdfWbWHJrii0AWynSmhBeqdLFKZkt4kMEdF1PUhKLHHR93HCyTZYdGpGZHLhf5dIDZdlLmohob5/BBFh2Q bBiAG2LsnyUpAd1OxEUUD XkvU4RvQR1ADIDYBECt0YiW/A6BAph3gjwhkRXo9Q4gCC9cXi60kCBtXgGoVHBDpJ01FPx/MOLcophotjfAQVY7ia4jVM1TFFIYyA1X1acijVxoyAdHKsZVIcleQZgqFQAUASKd/nsjk1nVZdQzcVy5StXn TfU/PuKYbOL7vBb4d FYu71ZK6aGcVy2n67Vcu5pvVXOtWn64URwZrnU6Y53u6FS3PTs1srgwsbI8s311cc/urQcPbD1xcPvzB7afObzz/LE9l0/su3r2yO0Lxx/0ptHZd1   OHjMnp48ysoIxB4ACQYNiD5ACRwPUbo8fMvfvBv0OgApA9e/2ZqLttZBqbgTCz5o/NOd8FpTAgwh4pVpjbMlCt4pUblSmSuyOQLlJfBLRfVjESQI4c64uSysWW7WapShpZQOSigiMbHJSbGAWuA/VSLMtwgLLYE7LZucmSMdv0EQYFkNwD6AksPQqEAYAi6kcAGk2hfNLk hmwAWYjiBgluECMHOCosMJE1CovKPMJRMVPEm0W9UhWcNEErcaDjmBCj5YSdBsbJKFDaaVJxUNsnZQ/RPLRZkytFmeVQniU1iS9mtKmu1R6x8hkj7dqB5dmG7Wier d9A TTQsYsZZ18IVMo5xrVTAvmUTnbbBRGmqWxRmmsXhwdKo P1KanRmfnpuZmRxenxpbmOpuXprdsmt65bfHAwX3Hju0 c3jXuSO7Lh7bc XUgRtnDt25ePLB5VNvXjv77u2LH9298tmDa19Co3v9pW8Aobfv/uj9hz8HkGAN uU3/wrXY3gePwNC0Oh /MW/fPTmNwvLxfEFbXLGmV1ya125Miq1JuXaMFducTlgdF4ql8PTORwwy2QIL4Nki1S6RJSbXL5A5Mv48halPcoANiI aIgRTYybGgp8wTVSFnQ/OiwIURoogxiSlBDMJIYNqXIMVFSG6i0/KaDaKGyv/UiqD8X7Ewjc 9jetgSUL8wzgGVojUpjlkiCJp11xLRLBS7pubBwphgxTrIRSU0A 8xWRCOgKCPKaBHDIyQ9KenRIJ1KZwjFQDgJVVSikBNbDbndlmsZuxS4GddJu56jua6R8c1iGhCyqyW/Uc40q9mxRn6sVhgeKo23y5Mjtal2tdssd0bq05PtTXOd5dmJ5bnOylxndXFix/L07q0L /esHju4 /lDjwto77WT 26cO3L34onXrp55 8b59166 NG9F78AhKDLPa4hoAwwkEBBAJAAD5g9UDqP4YEHuEBiAFL3ky/ 9fmj 9uj7PCYPDZrtaesRlcpN2EroosNOlelHQ/3XMI2kpqczPh4LkuU6kytI1anZKDjrpE0tZgdJLwAteSUzERkLiRCf2MiqhiXQXIVYFhEaSlKiyGOD3PcoMCGBBGKLMqxIYIcwMgQQYWhjIDOAReHHkjigygOlRfCcWAQAzwbYSlodyxqSJgpo66G2TqqqohjkpKUYtiYqqegqqws4RXYbFkTXITWE7yJ6gEFwxOoZDSxAcEHaR7YRFIxKc9hc75a8jwQDXKeH5iBrWY8PZc1c0UPxg8U0EgjNz5UmABshmvTw7WpztDixNASiD6d5sLM JaF7rZNs1uX53aszO5amd27Zf7grs3H9 8 dWjP2YPbLhzZeQXgef7gnfNHX7l86o3rZ997uVdAnz642oMHhhAsRoANdLkPX/slIARaHIAEFQOQwAVoPWpxvWdA6Ief/9OPPvvnLctLhTzVmbbaM3plQoUyqtTZQomBcsmVGTdNBj4VOISpJKs5pt7iJhbU8oToDbGOmTTkWNpBe/VUoaDIDDMl8hF44xOpPirVTyf6yGQfBe4DOUizvY2VpsMKFxLYQUMFjtYPjJyhwxKXYKlw79/CBjg2LPAxkY9CtbEAGDbAwjeJ8BqNRk0Bg19VxaSnkZ5Fug5uOpjlEL5HBh6teZiRRhWfsAqMmSPVAJW8FG8kBT0l6HFSiHLABhVMtSjX533bAP6WNUo5B3S4bM4p5b1SswAramGoWm03i9PjI ON6dHa/MTo/FRnfmpk09TI5qmRlZmx7QsTu5an9m6e3rdl7sC2hcM7Nh3fsXzywM4zxw5fOHHgytFdV0/svXn28N0Lx1 FFnf93HsvX/j4/otfPLz FfS3t / EOCB/vZXeD57 3dfvvd7AAk8CMDpMVSPHwAhoN0//vxf3n7lq85CtTkqlatMNkvAGpQpsfkSaZkIuAzQtUoNZnhUG28b4x2wLbQSLEOFpFvEgIWbclwXw4GVKtb4TIkybQQGlSxFQeHm6DBDhpAoIDQgCRFeCqlmVNZjipTS JQoRHU1hhIbQeXh EdyHxMVyAgBNA1QoaDIYJJBo4twoMMm 3Gg4BZHGDIuwb ppVyT9GxSN1OmhboOZaq4ocCqFIP pjqo7BGUmmD1hGATSprV84JRZNUcxZkJEaidSecCutbqrUK kcvZuYwVlDJBpWpUh8R2U 50tVqDrQ1ro612d2RxenJxdmppZnzzwuS2xemdi9N7VuYPbJk/sjp/bPviyZ2bTu9ZObNv9fzhnVdO7Lt2av9Lpw/cPnfk/qWTr7/4/Ns9hC5 fO/F3tL6CKEfAUIfvPoLqJ5P3vwNwPPFu38HCH31/h B3fXw OKfAZi/IgRfgg70w0/ 6cUL1/MtwU1TgYenAyKXo0tlDvZ6J43lq0K9rYwuWbNb0xMTRntUHqrQGRt1gCCIUYEOq0IELlNPZAtEkMU0M67rcYmLyHwUGAEnh2k6BPQhV8esQlhxY/D 9jKkqiahiQGVIJk /hF3gKElMhGeClHQ9NBBGu8JtULP74iAjtfzBsnYGoPDoLkJUlwEJ9HENANXgNFpOCOkUChDDoZejBVBcaIEi1B8RnBoIyeLPikFhJZh9RyrZinFIXWfzKQ52cR4HXU8Mwh0zSZUFzXSuOlj6SzRboqlCulkiMDlJkZH5mc3z02tLk5vX5nfs3Vp/ ryoR1bju3cfGrX5uf3rp4/sPXioe2Xj y6dmLfrdMH7pw9/OCFY70CunbmvZvnPwCE7l/94tEy9N1bd34Mdur7D3/54Ws9hMATAni /70/AEI/ PDvASTAA1B5jBPcAbMffvZnsDC  ejPl85csry4YaOuhadtAImCqQPcGgpregGsCrna5rLV3jc9E7G1WD4DWy2usBFLTTlgVYAaJER0I n4mA3Eio/LbFSGKUIO0EKYkcIUGZGMKKcO4PwAr8aAu6taiud7mxA4T6oSS4NaISVA uPBAxTiPBfn6XjP9aCiLMhFACcRVsj4GoPHdBkRhCQYd5oEeysmKQgrxlkuQYFBoiRFBYFCUS3GySheoMgGJeqE4DJqTrTzmpaRhBytlUWrprlVXTTJKBniTEL1UNGKqx4iG0lRS0puQsumQP6CVUMzUpWasbiwaXFm /L8rtVN 3esHN65emzn6qm9W8/s2/rCwR2Xju6 dnzPjZMHbp85fO/ckYcXTrx15fTb1x8hdPvSJ49q6OvXbn375u0fvX0XOMLPP3gVhtBvYAhBDT1G6OsP/gS97jFIj4vp/0HoH7/5 B/gpz/48B8unbgceEi TBeLXNqlPZsQuahjIaMdqTMhZj3cNxFLS7gGCMdhHgsbesIJUgr4dXI8XyW8NAb6giZGfQ9z07iqJU0LMZ2knyfMDCbB393HwTFKxPpooAn8ACP3CWIYvD5FTUpyHHiErQ8KQgjmkCLEDdBLxRjDhIB2y0wMVi6eBZsqrGKxNTKDylRK4xCJSigy/B4i8SmOS4gqyilJ2GpNl9U0UpAxnAYbEXoutrF/bQQJMRrJaThrELgYF22qVDb9sqh54O4lWROj9RSjp1g9xekx3U0KWlyAJu4h6RLlV8CPodvDuanO1PLcztXlw9u3HNu15dTuLWeghgChI7uuHt/70umDd88eeXD 6KtXT7/68vn7N869c v8h4DQ/Z40931A6I2XgWf/5N37P4My uj1X3/y5u8eNzoA6REGUCs9kL795M/fffqPvf722T CkPotIPThn3q/870/vXDiUgBlZOO2jphK3LYRWIYaNSHjQLnEVC5mcgkBD/FEhMFCuhTLBBgQa02MWTbi51A3i9kO5rkYgGS7iO6hupPSvYTgRFU/KthhUhmg5XDFYSbKtG7GRT0MXJxlgeaBMxvl EGcHgBLQmLj0N84GuoGrPQQR8I0ishU7JGRGDLZ2BpT4lyNl4WExqOyBEoPoqvQlHk9TYke3mtZFsmbOMpEw2BDJQZoLBVL9Id6O1eMYBMJIhRJrFNEMuOoqk XCkazGtAKKmooYyQ4K0krYVGNZQssWMi0EIINI19nTA8vFdhaw1qaW92yeGTb8vHdW07t2Xpu37YLh3ddPbbn5sl9t88cug8IXTnxxisvXHv13MlXLt54XEOvXP/qtVvfAEKPGt3PvvfKLz549Vcfv/HbT9/6W h1/59KApz G6qP/wwP0AABP0AINO/vv/P7s0deyAKxTlNpBytUmcKIWB4Wi1naEBFDQkU6ziJROhVh0bDIxiw9oQhRz0AcB/F9wrFToEH4ecpJUz70wyyhBaidTSp6khAHJLtPcyOaFwXKMBQQWTPFQJdTwNyJClTYkKIQiJB5aG4xkU3A6AL5FewJAIkCnLAIj0VkIsniPTNeJiNrJB5EIFTREAn0BTkuG6igJwUDoaWeYYHz0RTQShMl SRUEk4CO0ywYlL1KD/DO65IaQmM7jcFHKiL7CSHin6j4EgmZpqs4ZGikSCUCKFGzQDz8qQepEwHzWRoO03IbsoP0Hbbn5udnu9Or8xt7VXStouHdl49vuel0/vvnj/84MKx16 dfOXBqVMvnTx15 LLd658ev/qVw9v/OC1W9/9tYwApA9f /VjkP5aSTCQHhcToALXY6geIwQ/AiA/f/t3n735u9OHT5chBpSlSiVydF6G8WPaKQ9CI2rSsDGzSEpmUneSMPD9ALjVo7SJkgDjDhJCINC5JupncdsDDQK3Qcqr4E4Vz5RxMxcXjJBvgSaLGR7iubgFVAvSQvAiCwmVD9fSCCQgHAP oJQCjYeOUtQgyD8yFwfAWCKi0KCjpySoZhkYeWiNqJC8DLkWXJTjrAwuIYKD86Eggk3hUpKRYpFkT6jAuVAkNRhFQkkqitLRFBtjpJRiUKySBLcq7/IZDwRUbAxId1opFKVCWi1kdaMnT5CCjdo5UsunND lGQi4ZE6GlKyUGQDFwNI5rF4VpsbT 7ftP7Lr0uEeSEAW7p499OCFo29cPnX/ vMXbp29Dx7Encuf3b/6/f8TpHfu/ y9V2Ag/epRu4Ni u3/idNjqAAtuHrP7//xcQ31Cu6t371 67PJTgUYTTbHgA/k YhpJWAwmAZiyJDySag ImvxbJEIAlSTYpaZsrQU1JOqxSFzQqIDmhbzcknbQQOPVMBy9VKgvzmZWK6aMByYWzFTT8H48V2qltd8k9N4TGDiMrQTBw9sEpx1S 3BJoDKpwMvT2hcokc9eOi0CYOHqEgM3goiF1vDMFGKg6BPguIhTBSRFciJIYpFKi5LKSlWekTz7bjixQei/QPx/gRsAHQoQQziEvAWVDYJRcV9m8u4PWsv7yvNkp0tcqWCWnB1Q2N0k3ID8P5SjBWVe ZYEkQKw0WtHK7aIN2mdA2pD3HLc 653fMX9u8/uuPysd0vndh79/SBV1448tqlE2 9ePLt68 / 9KFT 5c/vTei1  cv3rhzd/8Pqt73qs4c6P37kHOP3q/Vd/A8ThUT31CN7jvvfl9/4AqMD11V/vQM3hp0DTX//dyxfeqJaESl0EJSwDDreWhGED2OiwbBg9Pm0FcVWJ j4WeJhn9Xhd2iN9IMBiAt7yZGqAZUOKBpwtIeu9RApk7VJYP073C2qIE0Omn0ynyYxLuzaa9bgh3x4C1VLnJOBvbM9xN SUJSOalFQADPADxQgHOy83IENyiIGQV4 aQ5uFOlsjqmGCCVNSktIQSkVVjdBMzHEo3SKA46Fiv5VGeHPQyqNmAdHTBC5Eo2hfONEPUwoDUVxNCgpu6mwp0NO2VPb0VsnJF6VSUS1mQWmls46QTwuijfMadHM250oaUHk9aWXQUpUzdFywkpkmdfrwyLGVsX3z7f2rB47svHnn/O1bZ26dO/zKhaOv3j52 6XTb9x64cPbFz  C8X04uf3r3/92o1veji9/KN37/zk83vf/ bBl589/OXHwMLf M2nb0JJ/QYaGgyez9/9uy/e dvvwwSCB0Do7d99 savP3z4i3duf33p5Avz88HIqNhrSo GBCAEOQU3S7hgSTiIakD1ILaJehmi0MQLo1RQxmwFJneC56BQEE2Og8TAS/DOTkCHFOQIxfVDJktUI7IZoaUBXgrDBlbIMo6Ouwrd8M3hjJPW2J7KwECSMmZICR2ikwpMu4QkATXvJSwFLkwS/RjaR6D90PpYKrKG5PvB6KOkBKUitJLSDdQGwuPimtIL9rFW0ioSThlL10inTDBaIpRcPxhbPxBbnyLDrJLg1ISkE2BhmD5tB0wugAyGmilImbKcLYG3xI3Ug0peK1eMcknP52AltDNZznIwQ0UgqgFyBi1GMX5wasyZH0kPVy1gE5umOx9dP/zejRMXjkLTe3j50O0rJ16/ceZ7L53/4PaFj 5e uTBlS8fXv3yVYAKrKPnH7xz9uYnL9z4/Mq9D 9 /cHDX3/46q hqj5549efQ/cDUg677aMLYPv8zd998ODnL73wYNeO2e6E0xoSc1kMdh1QYrwM6sGAcTDYE9IZ3LOSYD04HrwaKcNN5qqYV03pmQhETYIiYQUp0PQ8B/UCTLHA00uApwceOctHQAGCbInshgl2QIQmaSOKloDBkzH4gifXfbNgy75Kw7ajwHtChvgKLDlRkCGAnatK3FVxULoVBqPQCI2EJSqpUOgaXIihsBuLUVqOgBllGHEfghNmzLHiUP69SJgXpeRBVotyZpJQk7ROEGoKk2NJJkQBR4edScdRsLlcHPZZP8/nK3JpyLLznJOj01W OKTm6nJtyGyM2NURoz6qT7byrbpXr4LgqsFw5swYb8Q02Eg8aJ6J7rB76UDn3pGtVw4fPA40b /tM3tvXT7 5rXT79w4896tc 8DTncAp8ufPrz80YPT9 6cvPvKmVdfPXPvjYtvfHz11Q/u/eSDB7/4AEj5IwHiM hsj67P3/zt 6/8 NWbH508fHi647eHuHKFLgxxsNZYafg/R8GAUIEOQPwKWp VDLxUJosGBay3DAkR24lpflTzkrkMDVKeZSEwikBl0AAPLQoxIMjRsSIob1FQE0BjhaIEzEQ5aumkDuNDQnyLG8o4o7lMO 1VXbUaGK5Fy0oM/kRFjkGvgw1XEGKuRJU0JS0JGg2h0phAxQQyuQZBIZAX4iB8QoOyEOFFaIuwYYVVNaLKoDglIrAXxZ4bSK6nDIxzSdrEhDQj53hSSZFgD sYZxAoH8OFuGCihRIf1DSnLGtp2srzbsP0G0Z SM239HxbLYyK7WmjMxLU2m614 TrYqbBqy5CwN9QjoLTrFmJHXOFGyenjmxrnzu45djuC0d3XD z 8rlYw8vH3/9xZNvPYbqpfPv337h49tn37t18v6rL7z15ulbt47deffFdz 69vY7t7979 5PvncfoPp5D6dH16ev/ b9Bz8 dujQ5Gwaoqn1Cl/MkrkyWezwVhr1apRVpaAUFDEKYW7LTKYh whkQYOgT1ySwRwKiSACGXFBCpfTdDMnwaDS/RhgANIOBw1KDZO9Fy0OSyvHRnydrfpG2mYrYEF5bNEWMxab9blazhgtZ8fBkgbdzJGAUGg6pJFBZ4orICZwYcgeqwJSsJSGZxoCRmODPBHmiMgaHIQfCVzXWAIc9eh6MKDAawIziWCj0eSGvuj6ENYXwfvjIBpaOCLFE0xIBEEoR8PfTc2mJA9NUhGEgYxLzHHpTI6BTVv0CKPC61U PeYWOkGmBRXDKlnca3PFUTE/JAV1LlOT/Qqfq3GlBu/XGKNA9t7RLtYdsXes5HdvaxzZtenisQPnDz5/6ciei0deOLv/wQuHXrt49DXYnK6eeuv6qXduHL19a  Zm0duvH7q1p0jl99 4bXXrnz42qMIyts9qH4MUL0Pmt4rP4PnvTu318BC7dLlIb5QZj0HsdyUXaLSFboyRnhVVDShjOD1isEkN81UEGC i0MACMQFMPQAMM1CVMirZohamsk6qOOmXA8F2GCWwIoKLafoC6BQmyqRNsWKrVd9s1aBIBhZy3NDJQ7cWz/L5HJqJWeUspLt4LIO8wyqJ6xLCVvCQG53tBSsX0aQLLhyzpBgeeLJMGy1a1KQEOdjCB0GuykSXwcOB6ekcD6G0ZEkHYlhoRC6MYz30ybO2jgOekYadWqknk7C62uUCK2A0UaM1aEIkCBH6z5w94ReZNMjam7Czo3ZbkO1KqJT4eU0qhbh5WC9Gu9W PSQkh/VKh21PGU0F/T6lFIaF6qQc6vLk11z80LuxOrU1YPbXzx64MTeHaeOLJ49dvbc0StnYH869ODCkYeXYM/df P24SsX9169efyVN05dv3/2rdtHrt2/9OnDa99/HYIoII3f/u69uz B 9HDh0tNMdci/RaTrrN2kIJRAcMGnGwrkzKzSdlJaAEiar10I0xyYNs NEAjAcTMs3HTSJla3IH0lovDGpv1qYyNl7PkaEk1QfGC3A8XAj20kuUmmnIuwNMOnbXpaqAMle1ijqtl5UqWrQRSPuAyOaHdsoeHzXyNd3KY62LwJ/ounXbYTMAGEuEpkC6KmS5Wzzo2wEREYDitiZED0VR/JLEB9qEYtoGCCebirIUl6DBCQRUjMTiGIcQxNi66KG0k9BJulkgHojNlEVUHk3y/4MZB/G6PaF6ZSreI7AjnN3mvKXktTc71gmCiRxoFmgb ncFZWA zFHwpeIjT4GvzmeqsW51RRpbMsRW9u1Vf2uIvLboTXfvMzrEzS2NH93X3gGNxevjY8c1HTiwd2/vCiV03T 259fz O cO3Hvx8L3zO69c3n/z/N6r10 /efP0Gy /8OGdi588ePHzV69/H3B6eO3T4/tONMeMfJ3szIjpCsROU5af6EXmDNhmYOrgai/mCFAB84YdFgGqbT9iDb2 59K2jRc9qeixhYBNuywAlnbITkkvBexEUW9lFE1JgJji6GQxoGeayvSw1B1Rm2VlYciZbQaNQGynpbRFlxy5mXFqOb1ds8ZG3JGmXazz2RxXDBTP47NZIUgzloBqdJRWBhg9ZNhkxuM4IYYhoTUQGE6BwU70R7ENuBgmhDDKwsY6EE5t6HU5fDDBhiLIRkaKKhmUBkJRw8082FyyX2JwMUTqYRGoToEqNUQ9wKQA4e2EDLtFSwvaul4QRQvjYPPI8mZNtMqMniP8ISk3pgfDUmZc0yusP6wUp5zSlNVckAGnsQV9YtooNIRGU1ucyG3dmd28pbx7f 3wkemDe3buXzlzcPXC4W0Xj 64emL3zUu7L1zcfenc9nOndlw8C5jB0Hr nZtnvwfk4v6Vz16/8YPDuw8VC0yhxAY5BvhbHowDUKwzEHgC8oZoLgqeAlBnWIxMKCkH8o6IA11OT6YDMluADZfyPXy4ZIyUrAJ0M4MArQGmSNFlSl6vRCZKfqtgTg5nu 1ss6rUS3y7Ko61jXbNmBq2hmr6UFEoe2TBFKuO2cx6QzmrUpVbQ0q9KjlgXLlYIwOOAWg3pO0wqglC ADB9itKSpZQVY8rRgJUmzXJxCBBhKPx9eH4uhi6MfroDlUVJwchHJliogmQYy2UU MIRNGtpFMn0lUuV5bMDMVYCSFIuA0yW edPClYCUSM6CXCLrBeXaTUFC4nMDFGG5icFc2qmBmXypNqelhJj6rFaS835fojSm5cyXfNbMfODCuZcaU2JU0veaVRrtjipjZ7S7vdrXv0hXlnfn5o2 zhXQsndy e3Lf5zIEt5wGqw9svH9tx9ei2C/s2nTyx89rFo6  2JtYb986Bzh9fPfSh61q1jETgQ/ZBNh CMtLGU7KzmNWAGybsHxctuJAkXlgWWbCT NuGoVzRY6G5LJ0IQ9nkrh2xWjklalmdmmkVLL5rEumPaKYYRo5tl2RJ6rO7HB2Yaw02y53m l2RasW XJJKpcABlg8NCNPGZDQ84VyRmlknaGCWamx1ToH0rseJHyHqnt2xpVNIBE2Bm8R28A00Cl6UxD0TxCpIxAKW0NQ0SQ9kKIGEnQf4ASjiLNQUklAmwLFAZdT8d6UikOQP04OaAVEK6FWntAdnHMinB/W8km7COEhSs1QUhpX8oRVpPwCZ1W5dFsJhiRSTyXhEIGWyA4z9Xkt35Gzo4I3wjl1vjpjBsNsc0Ga3R10VwtWQ5FLfGFCqc8J9QWlu83dciQzv1vesstoAtfIcJ3R9sr0nm0zh3fOHweo9m5 /sDK aOr549tv7Rvdt ZLSfvHr3y8qGrV46/dvXkW4DTS feKfiGa4BSQCga2C4xGJyQZQSoNIgnuFgmB2oIDpKBHzABcGugfDUWuHg2TRYKXKUoNEt6p x3y5npenbfZGd1fGi2DelApjXGdMaViYY6XtXGh63FscrycHPz6Mj8SHFs2B2vQlZNKhaFXEGw8qxZIqrDfL3F1Ev6UNVrFLVclnGzKcdPegaVcXhVJhQvJThx8ClA1VX5lATHNBRQGMJxvC9JDKwh6AgOJSaGQVQH0DjQHeQEKcVTVAjOt0TRAVZKEVI0QQ2wJmIWKLcCLh80DdzIpkQXRN8UrSUg 6DlGRP89QILqo9X5vIdtTXvWiWmH/4jEE1yEkoBZe2U4KeAd/gtNt RWpv06pzc2WKtHi1sO1qYWNKGpnR7WMpPKJWuNrxgTe8IpnfIy1u8Sl0GVw2az3i9tTp5YPvske1zx3YtHN 7dPrQ8smjq2eOLB48t3L49v7jt Hs3 EHFw/du3ri1ZdOv7ltbqejkb6Ng5QANCztcvWMOVHJlPOAOpPPsl6OhnRcscjnCyyEhOHoRLnMlUt8Oc PtNSZrjcyqoyP2BMNf6Lhbp6qrsxXxqeU9izf7kiTDWuy4Q7VtM6wPzbsLYxXFydqU90s7O ZAp pwKEzwa KQQ0ONrGZClEuqtWc0yiAac3bLmpqmKVC/wS7FuXMOBAu6LpC73wZMHJEhSyQFBmMrk0RG3ogwZpCCrEo0geiKlRPHO2LgbWOh5Lo4GAUont9FBsHRu7kBLvC8G7SKRC5AgNNw89xXoZXswSUkZuD7ZXNVqRyXal11FpXzw1JskdzGqb5tJhBCTMq imjjKfbXBWy8HN6dVZrTIvjm9SZnd7248X9x9I7D7qb96Sbc bovFufNHLjcmlChldwqGvWxxUX7ChHWegubl1c3TN3cOv0/h1zR/YuHDm0dPL4yqnD83vPbz1 YeeJc/tvn9l34/z Wy8ef3D 0EuWypsmWq2I TQzXHaX20MrrVajansBqGoU6KpwyAvOVmbSZKnKDE9oY NmLa UMuJQXZjp2tNdf6Srzsykt8wOz03kVufqq7P1qW4wNAJne5XxOhxHdMZbwHSC5oTUHQ4W4HxB3QUDGmrIK/NBVciWeSB1paxZKRgZRyoFZiXQPZu1VEoXSElEcSKUYgckC6XkGOiBgpDi2SQrRlk5AgYHRCTWINQgSg8ksL6B8IYUAXQuihIDKA47WgrBQ9FIH0FGSAZ2BbpQ1GTY4DIR0Aj8HGuXaNMhKxWlXjfAaS0VDUDRLXG1hpIpS Mdbd OUrvtQvWwZkotUXadTbfEoC0GQ1x9FgpFqneF1rQ8MqOUxyS/IUyvuHPbrU07/dX9pcKIUusaQC7sKhXkxEbXbszozVljZNkb25xe2lzbPbO8vTPTO 83f3j3yr7d21f3zC d2rr17J7jJ8DS3XnpxI4z5w/eOH/w1mh9zNSItE/nPLbdMOfGCiujjXpRbzaMUlkOHDowyXyGLRfERlPozNib56vH5udOLi13h7N1YGvjmW7HbY0pk PBzHi2O26vTDW3dUe3dIamhjO1IWVmOL2/2948MgTEul5TgBeUa5pf440ibhbBBJHrZQhMqb4nZNKKbbGmxRo6bauMqVIaT4kiRjJRRoZEOCaISZqCUBgiSVjPOVLg2NcgyKRrUDj0TEUjsb6B0DqcCEs85JUjNKi8sM8yIGygIJCDE j2joFRGjj82TglQ4AWtwKm4GrjNb YlrNZONFCq8BPPNIFb8JA6mMQE3Cn5zMgvUg GrQVu8bKWSw3ImfGuMo0Xx5l3DIup5O4NIgpISmHyXnSqaPpIbIFo2uM66667SW7Pqc1Z81a1xxbdUa3Os0lc3zV37Ivv3Nb dyu2r6tiyubVuZ3taZ3VLfPda9vmru6dfPJHSePrZw8vHLk2J5Tx2BUzayUs1o2zVVywmwzv3WuujxdHh7Wm029VJfyPl/JiKMtuzNZbM7Jw7Pq5KQ3N5/ZuTC6PDc0NC5PjriTrUy1IY60zOG6P15xJlv 8nh9S2e8Wfch6dYZMnbOeCNNf6yZqZQUO09noctVRLvMwnSwPaKU0bKBJFu4apIAkmUysgiZX0QRMbhzQpJiokmij1cg6R2XOQjTxWkKNPWkrGEpLBSN961BYhEciWHxQYaC30AlJgnOBUqGaBZUvwQPATwuxoFGzoOAmBQtnFVSKBtRdMJ0mYl8MD ShTQhZG6cIuekBVikIXmi WS2TE MmGOjem1MDoYFswyTDNfzdG5M9kcYe4gORiW3JetlLgmBDTPmNujWol0elya32c05qbUgzezxJ/ekOzu9iR1uZ2swsdMb22K3N5mdHd6mI7mtu4xzR4v797c27csNLdlTc UdU O7x2rP72qd37a6b3HH6tzKyqblleXF2YXG2Lg9Me5ARnVq0plbtGenvZluenTKHO4q4219vGu0O0apo9WnzcaUCcHH0gQ3NuHNz VGFs2JrjU7FAy3vNGR7PBwtl0LGg2nOqQXq2qlbGTyUraqVYbs8ZEA3sHpgsCCbOpgblHwioKeoXkTUSH4YGGkEscEkNkIQIhiYklqkKAiODWIsb2AcTjZh4AHBCkiPMIQSY5KYXCQEumHK5boWxPpG0gODhLJMEfGBSzBkjGajRFg60qg3aIkHcXZOByDIYBvyChBA1QpWkpxGuprxHTOHmua5bYWNEUIIZsWCdPYgvHbkEBObdUUOIyQhwMhDQakCgbOYY8asORqFdZsad64UZwJ3BEtOyHnR5nqlLCwx5vepZfGWbOIlSe46a1eZ5s3vguAUYc66sgmc3iLNbUtmNjlz /NzG3RRrpSe1ad3mQPz1jzM8FsNwNz/tru SvbljYv17uL2bGpzMRMaWzK7Uwa8/OZTUuZ6VmrA0XZtUa79uS0052xulP62LTWnLLKE2pnwevO57ozmfasPdoNRiad4ihbGOa7DavRsEot JvaxZbp1oRCyzCKBMhaTsA6Oa4HW013C1yxrpkOoQaEmqb0gFEcitNxy6JVnaDVBAYyOUS62ChOhuNEfxIOWNKDIPoBSHCEMoFBNLy3ukLNMHCUlUokkMFEqj8MlRTvG0z2w7nXGB4PM6kYS8YZKgE2uSSkZAHFYCCxSUoE9y8lwaEXC8gbYYDMKsXbGa1W0EsFxcsIvI2ocIKnKAhGKtMQ6pNmeVy187joRLU87tRZvcR7I0Z2zCh03WDM1CuS19Ry4xbsTIUJqTrF23VUDlLVCWp0Ez 3W1/c707vtBvL5vg2tzTJZEfp9rzU2WnNHchv2pVbWLGGV6zx7d709vTYgpVuU 1JbteBzMouc3nJ3TVRAs2iNW82OkZtVK5NqPWOWm0K7WF1aFjsTJntcR3KqDvrjk6aI1291hbmNxU7m3IjC3Z7XBubcNsjenlMqIxrxQrXbBrjIAc31HRZ0n08X5DSBR62crcqumXOzfNBlncynAcf9FBVGkNmOseaHiGbKKOB9ZMgxJhhkZbByDomaEmCjSR6Jyn6Iqn1ERQkno0IBebcOvgyFF fTIRIMkEko0gqTNIpBIsDSKAn9EBKbBxMDsI5l0EiGqFSUSoRI1MxgQGQcJJJAMeDoQXRBk6C4AMmqKlajU2niXRasXwxm4PDfIgCaiNsSyWWVmLZpuxWBQ1WXT0hQeJuWACmkB7R/aaWbmpagRcDSgxo1sGAU8CgCkbw/AQ2spWtTtP1SWH gL wz4KmN7oq1 eV oJVmBaqi8LwZnVkVetsszpbzHYXxIvk6Io7fzA/tkkzS0h5nFzZpc0ua5sPmpW2CLU1tOBUp83prUF3szMCOe9JfWhaG5rRqx2 2dGHZozGnAn9rTmmjHXk2Tl7atmojsmZKp r80GRdMFCq1O1mrzaIwWtoYaVq6tgvjg9n6J3qKTSMGsNPV/mgSi1hvShmlEoSFavgCgOdjIT9pZIkgwxKmzKCZjunBQ3dBIMpzjaD6gAt 6LPjsQf66n7CD9caQvHNsQhdArmkDioWi4L4WEESQSi/eB3NMDCa7YxgEACQU1NRxCQmEsEuHQJENCScUQJEQSoKIjMMoYOgGqSc6ii57geWI6LftZ2U2DR570cni yioBivO94xjg83I2YdVUrcgTetyoyGqOlrMkAAMqkdPg5BJKWiExEytOYl4NVbOJxixbm TGlvXqNOMP00aNygwTtTm5NCXkZ/nWslyfFStdsTIjFWe4oUWxMWeM7wjKc1J5QqqPqcU6la/RrVk2O8GWuurQnDW21Z3ZGSzsyc3uzkxtdZuLTmPRL07aQ3NaAGLrMA/bWG1UnZm2t21KT87oQ NKcUjI1JnMEJtvCgH4nJAtKdDlvNmquo2amc4wcKjEylDFvDnTKrXrVrOpAlSjLa1RVcFxtj3S9mlBQzQb100SxgSMZzB0EC4Ee44sIypwAXxwY TZgcjajeFnN0bWDkSfG0wABv2DoQ3RUB ViMIQiiL9IKjCwT0UBO74 kftbgBoXjg1AGgNxAfg/Hk/HokIqSRDwMczhDEMRlmCIxMiZPMEWIYhKINYFuSYSMhAQ6TEcUjDIc2sZOVElI6EiD5USlhl2R2CtiaLAckHBG2mpDSJqv2MGQUXpz6rZseYYCRp12JGIa7CqR1x0CghuQotulE E9WqOJ9NMu6gmkn4NbwwDkl5b3JTtrPkN eUsS06vOjjK057s9FeVrwhwobPKikTZhbTCym7hTaXFDjaP7kXSEePaEzuCMZX7daCVeyq4wvGylZ7YlosTzDlMbY8IVfHlO60NT9rzs87rWGxUOYqVcuvCn6RgfCM4CeMgElnpWpZyxb4WkmuVaR0ni3mlFbd7A6bE6PuUF0ZA8OsIGQDcCXUTIbxA97wWaBLVpkVdIQQo7gU4zj4ZJ8EQSeiyIYIunFjfN360LN94bUbwvC5GH3w4SXwGRk4Hgb6hjPxBBlOEmEcC4eiGx61u/5wbCP82iDw8Fh/f7y/n4jGyGiEwxMkHiUwGGXwOR5gyycMizAc ASTKASM/IDItBhGghQYDgeeRV kNQIV4qD1wWFbkFadIV0ry4SW5GCWFjnWggOG60Loc6BH2WXEG0IqM1RpksiMIloOTbfI0VVpdLPc2WoWO5KYRoVcyhqiBTOaKeBwqqs5Jg4vGlMr3vCCOrnTaS3qlY4wuqq3VjS7hVllxMyjej5W7mD5LtXcIoOwNLPH7S4rnVWltQJ3sw4q1KhUmhBGJ 3uvD2 2RyeN9It3K6hpbY4PiovTsL8lyB8oacRrYj5NbEyzHpwMDaL 0Uqk czRaGSVxoVpVRX8hUlHQhwQqtZNqoltVDkfI9YnEgvdtKNiqkYKKwoVol3KqKVY3gL4RxMsogUHeOFFEmGU0h/OLlhQ3RdX2Tdc/3PboBrcG1/aB3kEgg0ShOxBDIQSW6Eeyi0bg3AE vvXcm Hk7wKQ2JR8MJi/SGE4NGCSRCYlGGiCkaeMyQDUrBRwpAWCVTxKw8orupbItUc4zsc5JNmwVZK0hywFkV2SgKUpqmLYyyUTnHSh6DSnHGToLTAUVj5BPZNi378eo8DfNmYrvR2kzPyMACAAAHoUlEQVRP7dSG5hUhjZNm3GxQRoUyq8zQtD69K5jZ4UwtqZ3/u4Tr7G0bMcMHXO8cx9oiKVHcpLgk7qlBStSWNSw5Z8fJJU6c5Jr2OtDimk9F 9/7uAcQhg2YX/TqXc94P7oPX OHv8Q3H4LNG fw5J/ 5G3f9WY7Nd8r2VG5ebR  mIePgHANVcPvf6wnW7E/ef /tEZ7XRzwuLn/OwVr6Ljz8nTL3lx1qZnc7xV4UZCDi03VrHQRjPRjFrBVJ d9WwvBnMhmXNYNgeZvl6GCzCzY3W6dNfreJxZw5FTFBbUn2kijwfGrDCzCfBs0cVCaotWDF7GtEaq6nPWqItPxsQOI9Rppsaw9UbjqlR9USEuwX1DPILxocVVZYkWWIJol vEVZOukJ0ygvTckKBJZeqNdqVBojlhIociiKREqiVSZLdDa0IHPcnDsP98mwBsmDpbd6c7UTNhJVOG676d4YaAZKayV1jBzA1nFoY3N9fVmO9GooppJzeUAOuqGa29ZBt6Mwv6VtGga 2XzpSdAvO URd34uo1 Fwx2KruXHRnAiC xRv/1ZchKtv5M4hBcf hv3it7z86N0/u4X3w tfo/pf49Oie32HdiY8PwfS2e3znHj642Je9QuhnHT2jFg96dmM4C64359yVMDlhRbNnJ/f0EF/fu8XZxO48XMspROGH/npnrHb27f0kW/XipZSt1cFc8nPWGbJQOs4Ld1ZYkE6aNhcMleXGHU8dNxHHE90OWRPQdSCMZnqSa5rRgZ5eszjNFcwI/QmEAKG4gAIYVDCCKjWaVzRdb5C4BHTZpEoEXSIw5jFllml0aBxxIAWOolhoF15 16rUESQ8yKFmGSedaniRJ0nMe0gsnmihPPZlTu92FIHCaxxPOha33GnxBMpITpBbyCHVF2SYbcO2Pdb7qeaMtGgF0IOzxiZUK91Acou kSjJKoyWXrTyrTHYdJPrMYRQAY8lWc1o3ZqctPPnaPdoTu9kwO3GgLWmXHbbOz7Fh/dOcVSm5 72UZ 9Nm4/WafPzum998ffRj9/Do/v7duvPrxdMIKPD/Lmo7t8tNODZIEjhgxt1bEzJtwq3oq3URU3EtgWb9G1ARPPeEx3OfCqjQG OF2Z4RRruDKd9w 3o/nRGaxlzNzXyzgZd6GV9AbsaNjzI3E0MlaTeDYLD3tnu7UsCMRTSYOkJGU1F3Jwwc2kKNMlk4YMq5/AkCJrHi YBG82FAvTGz7rlzWkUfkFTgUhTkSrRHEVxAlzRKV Ua5eNJslkWtxMgkm9vcgIZlwMKhGVKpEuU5Vm2AmuEYTBZBpkAJJyu1WT2ENqdNXOUUk4YTyYH7LzeHS0j3INtusRAggDF3CiJVnw8VQdTMTLxuxKrm8BGn4QPcmfTe3gqnjZGbXgQ5C1GKmP 64OVec9cGeX77WTh D8a7rFmhpkpmxwbW0ePC3j HsVvcAunv0 Fpev 2tduZfv03 /o/xf/ 9fvcUPXyJ7/7sLN o2UHIb8TJnRqs2OErKdkIyRL8b8cM2v5cSPeaN6XdnEkW6JG85tEmLFmFPC60KNMm6yjJTSOkQSllsZFm6hxQ1gxHaqzdcrjIowC4VyBZz0JBdjEMT3meDa3lrHe793LkVipibPGzTtemdNxIc9v9BC4gjLg8Kn 8Av9pgqGWbXByuCBHkXSjSeGw1o8vSxdEu9ZmGxRXRoRq5NXl1cWLyx/QotpsHbiDACEKyh1VqZPVOolaV27gdzxs/XnDZRsk1yQw77HNpsq0ZAaGNKZncD2N9UIxGHfjrGsPxD6OfiQK9CcOPvdQ1P1nu5ls8OhyQp/WI9UcqL9nFWIGTTlMTvHSD2aWOaDsCeUVFLY82WgVd9rhveePJMmnvIWYHozhzpy9spcP/dGxayRtwagFKah65Xi0fvu2wHP/Njy8dd786m8f9Oun7uYRdZJIdnx27o1/0qMtEy7bcq/KSFVr1MFGDB2uO VhVuwN4FeEwL3upzyqlhUKTioFAXwiDK81HV8Alj caF6GEVyRcVgBYl6N9nwpGagDCIbGcZ7a89Qe PhTnmD HjDOiPBy5E3bimk7ZlUHSDQLC5c91KxUdcd6L5FFg4SYFyRq1 UVl29LJEVXCaoMxKFJlEvlC2TVFU7bvfgDDm5hc Ilipfa35HVZrNcx0Mgipg1ynV0LLJUbVUaCBJyCCFHSWTrBOa9/9c9FjRaBAXFQPFS0RmKDrg AK8QCUW4A9VkVULqd0SViXNAhpQeK0oA8RcFf2A/ReIrqiUgn JFEBbaau8HWUsLSwBLhjfdzb3PqWQwE8A2Da/1ZK4Mb/TJWVdsklZrjFGTzYZhE/d37rf/LL7 Lf3wJf7nv4r1Hv/J7R57x0 2tyLQirKTE29EZ9wO56w3Qcdmoi2X32rghQGu4ztOK1XVb3O9muHT/rDbCzjJInm1AbvHoND7AZ3NVWgRZacVTSAshNqEdQPFcWXY64rMuNkG 1N4exMdN3aRc/m0G2SyPWipERQ7BHa YqlvJl4Uqq4nCzoFcu45Kg6nuAzoN6XXpvlG1 GNBPeXZJapM2yVoHEJ7bJcvSxVXly8xNXO73HWjhGbjEz DwJ76E/9UJwEAAAAAElFTkSuQmCC";
     //dataString.replace(" ",  "+");
     var newName = config.path+'/public/profileavatars/abc.png';

     buffer = new Buffer(dataString, 'binary').toString('base64');
     fd = fs.openSync(newName, 'w');
     fs.writeSync(fd, buffer, 0, buffer.length, 0);
     fs.closeSync(fd);



     res.format({
     json: function() {
     res.json({
     status: "Ok"
     })
     }
     });

     */
}


exports.profileAPI = profileAPI = function (req, res) {

    console.log("/api/profile".red);
    res.format({
        json: function () {
            res.json({
                user: req.user
            })
        }
    });
}

function viewUserAPI(req, res) {

    console.log("/api/profile".red);
    var id = req.body._id;

    models.User.findById(id)
        .exec(function (err, user) {
            if (err) throw err;

            if (user) {
                res.format({
                    json: function () {
                        res.send({
                            user: user
                        })
                    }
                });
                return;
            }
        })
}

function saveUserAPI(req, res) {
    console.log("Save User Profle API".red);

    var id = req.body._id;
    var save_user = req.params.id;
    var eventId = req.body.eventId;
    // Save profile
    models.User.findById(id, function (err, user) {
        if (err) throw err;
        if (user) {
            var query = {'savedProfiles._id': req.params.id, 'savedProfiles.eventid': req.body.eventId};
            models.User.find(query).exec(function (err, findProfile) {
                console.log(findProfile.length);
                if (findProfile.length > 0) {
                    res.format({
                        json: function () {
                            res.send({
                                status: 404,
                                message: "Profile has already been shared."
                            })
                        }
                    })
                } else {
                    console.log("user found");
                    //if (user.notification.email.businessCards) {
                    //	inbox.emailNotification(user, "inbox")
                    //}
                    //user.mailboxUnread++;
                    if (user.notification.mobile.savedProfile) {
                        console.log("user notification found");
                        deviceUsers.findOne({deviceUser: id}).select({deviceType: 1}).exec(function (err, type) {
                            if (err) throw err;
                            if (type) {
                                if (type.deviceType === 'iPhone') {
                                    console.log("sending push");
                                    sendPushObj.sendPush(save_user, id, "a profile has been shared with you.", "iPhone");
                                } else if (type.deviceType === 'Android') {
                                    sendPushObj.sendPush(save_user, id, "a profile has been shared with you.", "Android");
                                }
                            } else {
                                console.log("No device user found against the id: " + id);
                            }
                        })
                    }
                    // find the card
                    user.savedProfiles.push({_id: save_user, eventid: eventId});
                    user.save(function (err) {
                        res.format({
                            json: function () {
                                res.send({
                                    status: 200,
                                    message: "Profile saved"
                                })
                            }
                        })
                        return;
                    });
                }
            });
        } else {
            res.format({
                json: function () {
                    res.send({
                        status: 404,
                        message: "no user found"
                    })
                }
            })
        }
    });
}

function CheckProfileSaved(req, res) {
    var id = req.body.logged_in_id;
    var attendeeId = req.body.attendee_id;
    // Save profile
    models.User.findById(id, function (err, user) {
        if (err) throw err;
        if (user) {
            models.Attendee.findById(attendeeId, function (err, findAttendee) {
                if (findAttendee) {
                    var query = {'_id' : id,'savedProfiles._id': findAttendee.user}
                    models.User.find(query).exec(function (err, findProfile) {
                        if (findProfile.length > 0) {
                            res.format({
                                json: function () {
                                    res.send({
                                        status: 200,
                                        message: "Profile has been saved"
                                    })
                                }
                            })
                        } else {
                            res.format({
                                json: function () {
                                    res.send({
                                        status: 404,
                                        message: "Profile has not been saved"
                                    })
                                }
                            })
                        }
                    });
                } else {
                    res.format({
                        json: function () {
                            res.send({
                                status: 404,
                                message: "Attendee not found"
                            })
                        }
                    })
                }
            });
        } else {
            res.format({
                json: function () {
                    res.send({
                        status: 404,
                        message: "no user found"
                    })
                }
            })
        }
    });
}

exports.doEditProfileAPI = doEditProfileAPI = function (req, res) {
    // this works as incremental form submission.. some fields may save, some may not. It saves nevertheless (the valid ones)
    // the requirements are very lenient
    var errors = [];
    //var u = new models.User();

    //console.log(u);
    models.User.findOne({_id: req.body._id}, function (err, u) {


        //console.log("/api/profile/edit"+req);
        //console.log (req.body);

        //console.log(req.files.avatar.name);

        var blocking = false;
        var cb = function () {
            console.log(u);

            u.save(function (err) {
                console.log("Save Error ".red + err);

                if (err) throw err;
            })

            u.avatar = util.editURL(u.avatar);
            res.format({
                json: function () {
                    res.send({
                        status: errors.length == 0 ? 200 : 400,
                        err: errors,
                        editProfile: true,
                        user: u
                    })
                }
            })
        }

        try {
            if (typeof req.body.email !== 'undefined') {
                check(req.body.email, 'Please Enter an Email Address').notNull().isEmail()

                if (u.email != req.body.email) {
                    blocking = true;
                    models.User.find({email: req.body.email}, function (err, emails) {
                        if (err) throw err;
                        if (emails.length) {
                            // email taken
                            errors.push("Email " + req.body.email + " is already taken")
                        } else {
                            // email free
                            u.email = req.body.email;
                        }

                        cb()
                    });
                }
            }

            if (typeof req.body.name !== 'undefined') {
                check(req.body.name, 'Please Enter your First Name').notNull()
                u.name = req.body.name;
            }
            if (typeof req.body.surname !== 'undefined') {
                //check(req.body.surname, 'Please Enter your Last Name').notNull()
                u.surname = req.body.surname;
            }
        } catch (e) {
            console.log("Exception Caught ".red + e);
            errors.push(e.message)
        }

        //Privacy
        if (typeof req.body.allowPM !== 'undefined') {
            u.privacy.allowPM = req.body.allowPM;

        }
        if (typeof req.body.allowWall !== 'undefined') {
            u.privacy.allowWall = req.body.allowWall;
        }
        if (typeof req.body.allowLocation !== 'undefined') {

            u.privacy.allowLocation = req.body.allowLocation;
        }
        if (typeof req.body.showProfile !== 'undefined') {

            u.privacy.showProfile = req.body.showProfile;
        }


        //Notification - Email Stuff
        if (typeof req.body.emailPrivateMessages !== 'undefined') {
            //u.notification.email.privateMessages = req.body.emailPrivateMessages == 'yes' ? true : false;
            u.notification.email.privateMessages = req.body.emailPrivateMessages;

        }
        if (typeof req.body.emailBusinessCards !== 'undefined') {
            //u.notification.email.businessCards = req.body.emailBusinessCards == 'yes' ? true : false;
            u.notification.email.businessCards = req.body.emailBusinessCards;
        }
        if (typeof req.body.emailComments !== 'undefined') {
            //u.notification.email.comments = req.body.emailComments == 'yes' ? true : false;
            //console.log(req.body.emailComments);
            u.notification.email.comments = req.body.emailComments;
        }
        if (typeof req.body.emailSavedProfile !== 'undefined') {
            //u.notification.email.savedProfile = req.body.emailSavedProfile == 'yes' ? true : false;
            //console.log(req.body.emailSavedProfile);
            u.notification.email.savedProfile = req.body.emailSavedProfile;
        }
        //Notification - Mobile Stuff
        if (typeof req.body.mobilePrivateMessages !== 'undefined') {
            //u.notification.mobile.privateMessages = req.body.mobilePrivateMessages == 'yes' ? true : false;
            //console.log(req.body.mobilePrivateMessages);
            u.notification.mobile.privateMessages = req.body.mobilePrivateMessages;
        }
        if (typeof req.body.mobileBusinessCards !== 'undefined') {
            //u.notification.mobile.businessCards = req.body.mobileBusinessCards == 'yes' ? true : false;
            //console.log(req.body.mobileBusinessCards);
            u.notification.mobile.businessCards = req.body.mobileBusinessCards;
        }
        if (typeof req.body.mobileComments !== 'undefined') {
            //u.notification.mobile.comments = req.body.mobileComments == 'yes' ? true : false;
            //console.log(req.body.mobileComments);
            u.notification.mobile.comments = req.body.mobileComments;
        }
        if (typeof req.body.mobileSavedProfile !== 'undefined') {
            //u.notification.mobile.savedProfile = req.body.mobileSavedProfile == 'yes' ? true : false;
            //console.log(req.body.mobileSavedProfile);
            u.notification.mobile.savedProfile = req.body.mobileSavedProfile;
        }
        if (typeof req.body.mobileMessage !== 'undefined') {
            //u.notification.mobile.messages = req.body.mobileMessage == 'yes' ? true : false;
            //console.log(req.body.mobileMessage);
            u.notification.mobile.messages = req.body.mobileMessage;
        }


        if (typeof req.body.company !== 'undefined') {
            u.company = req.body.company;
        }
        if (typeof req.body.position !== 'undefined') {
            u.position = req.body.position;
        }
        if (typeof req.body.location !== 'undefined') {
            u.location = req.body.location;
        }
        if (typeof req.body.interest !== 'undefined') {
            u.interests = req.body.interest;
        }
        if (typeof req.body.website !== 'undefined') {
            u.website = req.body.website;
        }
        if (typeof req.body.education !== 'undefined') {
            u.education = req.body.education;
        }
        if (typeof req.body.desc !== 'undefined') {
            u.desc = req.body.desc;
        }

        if (req.body.password && req.body.password.length > 0) {
            // user wants to change/create a password
            if (req.body.password == req.body.password_old) {
                errors.push("New password and old password must not be the same")
            } else if (!u.password || u.password == models.User.getHash(req.body.password_old)) {
                if (!u.password && !u.email) {
                    errors.push("You will need to add an email address before you can log in with a password.")
                }

                u.setPassword(req.body.password);
            } else {
                errors.push("Incorrect old password");
            }
        }

        if (req.files && req.files.avatar != null && req.files.avatar.name.length != 0) {
            var ext = req.files.avatar.type.split('/');
            var ext = ext[ext.length - 1];
            u.avatar = "/profileavatars/" + u._id + "." + ext;

            var createThumbnails = function () {
                u.createThumbnails(function () {
                });
            }
            if (!blocking) {
                blocking = true;
                createThumbnails = function () {
                    u.createThumbnails(function () {
                        cb()
                    });
                }
            }

            fs.rename(req.files.avatar.path, config.path + "/public" + u.avatar, function (err) {
                if (err) throw err;

                if (config.knox) {
                    config.knox.putFile(config.path + "/public" + u.avatar, "/public" + u.avatar, function (err, res) {
                        if (err) throw err;

                        console.log("Profile File Uploaded");
                        res.resume();
                    })
                }

                createThumbnails()
            })
        }

        if (!blocking) {
            cb()
        }
    })
}

exports.getUserInfo = getUserInfo = function (req, res) {
    if (!req.params.id) {
        res.format({
            json: function () {
                res.send({
                    status: 412,
                    message: "param user id missing"
                })
            }
        })
    }

    models.User.findOne({_id: req.params.id}, function (err, u) {

        if (!u) {
            res.format({
                json: function () {
                    res.send({
                        status: 404,
                        message: "User Object not found"
                    })
                }
            })
            return;
        }

        res.format({
            json: function () {
                res.send({
                    status: 200,
                    user: u
                })
            }
        })

    })
    return;

}

exports.loginsettings = loginsettings = function (req, res) {
    try {


        var query = {_id: req.params.id};
        var setvalue = {};

        /*if (req.body.name != undefined)
         setvalue.name = req.body.name;

         if (req.body.surname != undefined)
         setvalue.surname = req.body.surname;

         if (req.body.company != undefined)
         setvalue.company = req.body.company;*/
        if (req.body.email != undefined)
            setvalue.email = req.body.email;
        if (req.body.oldPassword != undefined) {
            //exports.User.getHash(req.body.oldPassword);
            models.User.findOne({_id: req.params.id}, function (err, u) {
                if (u.password == models.User.getHash(req.body.oldPassword)) {
                    if (err) throw err;
                    setvalue.password = models.User.getHash(req.body.newPassword);
                    models.User.findOneAndUpdate(query, {$set: setvalue}, {upsert: false}, function (err, user) {
                        if (err | !user) return res.send(404, {error: err})
                        //res.send(200);
                        res.format({
                            json: function () {
                                res.json({
                                    status: 200,
                                    message: "Login settings are updated."
                                })
                            }
                        });
                    })
                } else {
                    res.format({
                        json: function () {
                            res.json({
                                status: 200,
                                message: "old password does not match."
                            })
                        }
                    });
                }

                /*models.User.findOneAndUpdate(query, {$set: setvalue}, {upsert: false}, function (err, user) {
                 if (err | !user) return res.send(404, {error: err})
                 res.send(200);

                 })*/
            })
        }

    } catch (err) {
        console.log(err);
    }
}

function deleteAvatar(req, res) {
    if (!req.body._id) {
        res.format({
            json: function () {
                res.json({
                    status: 404,
                    message: "User Id missing"
                })
            }
        });
        return;
    }

    var query = {_id: req.body._id};
    models.User.findOne({_id: req.body._id}, function (err, u) {

        if (u) {
            models.User.findOneAndUpdate(query, {$set: {avatar: ''}}, function (err, user) {
                if (err) throw err;

                res.format({
                    json: function () {
                        res.json({
                            status: 200,
                            message: "User profile image is deleted."
                        })
                    }
                });
            })
        } else {
            res.format({
                json: function () {
                    res.json({
                        status: 404,
                        message: "No User Found!"
                    })
                }
            });
        }
    });
}